{"version":3,"sources":["skylark-online3dviewer.js"],"names":["define","$","InfoTable","parent","this","table","addClass","appendTo","prototype","AddRow","name","value","tableRow","html","AddColorRow","color","valueColumn","document","createElement","colorDiv","attr","hexColor","JSM","RGBComponentsToHexColor","colorString","toString","length","css","FloatingControl","controlDiv","contentDiv","Open","parameters","Close","text","Resize","remove","offset","left","width","top","height","FloatingDialog","dialogDiv","AddButton","dialog","button","buttonDiv","click","callback","title","undefined","i","buttonsDiv","buttons","addEventListener","MouseClick","bind","unbind","GetContentDiv","body","clientWidth","clientHeight","clickEvent","dialogClicked","target","get","parentElement","ExtensionInterface","app","GetButtonsDiv","extensionButtons","GetModelJson","viewer","GetJsonData","ExtensionButtons","ImporterProgressBar","borderDiv","maxCount","maxWidth","Init","Step","count","step","ImporterButtons","AddLogo","logoDiv","location","hash","reload","image","onClick","buttonImage","AddToggleButton","toggleImage","isOn","IsSet","val","ImporterMenuItem","parentDiv","menuItemDiv","isOpen","openCloseImage","Initialize","userButton","id","openCloseButton","AddOpenCloseButton","userButtons","AddUserButton","menuItemTextDiv","AddSubItem","myThis","hide","SetOpen","userImage","onCreate","userData","onCtrlClick","event","stopPropagation","ctrlKey","onOpen","show","onClose","Highlight","highlight","removeClass","IsHighlighted","hasClass","ImporterMenu","empty","AddGroup","THREE","ImporterViewer","jsonData","canvasName","ThreeViewer","canvas","getElementById","Start","cameraEyePosition","cameraCenterPosition","cameraUpVector","navigation","SetNearDistanceLimit","SetFarDistanceLimit","SetClearColor","Draw","SetJsonData","RemoveMeshes","ShowAllMeshes","inEnvironment","currentMeshIndex","environment","onStart","taskCount","EnableDraw","onProgress","currentTask","meshes","AddMesh","onFinish","AdjustClippingPlanes","FitInWindow","ConvertJSONDataToThreeMeshes","GetMeshesUnderPosition","x","y","objects","GetObjectsUnderPosition","object","Mesh","push","ShowMesh","index","scene","traverse","current","originalJsonMeshIndex","visible","GetMeshesByMaterial","materialIndex","meshIndices","originalJsonMaterialIndex","HighlightMesh","material","emissive","setHex","FitMeshInWindow","FitMeshesInWindow","indexOf","MeshCount","SetFixUp","EnableFixUp","cameraFixUp","SetNamedView","viewName","eye","center","up","Coord","cameraMove","Set","ImporterApp","fileNames","inGenerate","meshesGroup","materialMenuItems","meshMenuItems","extensions","importerButtons","introControl","floatingDialog","isMobile","readyForTest","IsWebGLEnabled","IsFileApiEnabled","OpenFile","match","window","matchMedia","matches","RegisterCanvasClick","DragOver","Drop","fileInput","FileSelected","onhashchange","LoadFilesFromHash","hasHashModel","ShowIntroControl","lastChild","removeChild","div","GetWelcomeText","join","ClearReadyForTest","SetReadyForTest","AddExtension","extension","IsEnabled","extInterface","dialogText","HideIntroControl","welcomeText","SetHeight","elem","style","offsetHeight","offsetWidth","JsonLoaded","progressBar","Generate","GenerateMenu","AddDefaultGroup","menu","group","AddMaterial","importerApp","importerMenu","materialsGroup","materialMenuItem","materialButtons","highlightButton","HighlightMeshesByMaterial","fitInWindowButton","FitMeshesByMaterialInWindow","ambient","diffuse","specular","shininess","toFixed","opacity","mesh","meshIndex","AddMeshButtons","meshName","meshButtons","copyNameToClipboardButton","input","position","setAttribute","appendChild","select","execCommand","visibleImage","meshMenuItem","vertex","min","Inf","max","vertices","Minimum","z","Maximum","triangles","triangleCount","ShowHideMesh","IsolateMesh","isVisible","filesGroup","main","requested","missing","missingFilesGroup","infoGroup","j","infoTable","materialCount","materials","vertexCount","AddInformation","GenerateError","errorMessage","ShowMeshes","merge","MergeJsonDataMeshes","SetView","viewType","ShowHideMeshInternal","onlyThisVisible","HighlightMeshInternal","ProcessFiles","fileList","isUrl","userFiles","processorFunc","ConvertFileListToJsonData","ConvertURLListToJsonData","onError","onReady","mousePosition","mousedown","pageX","pageY","mouseup","mouseMoved","OnCanvasClick","ScrollMeshIntoView","menuItem","scrollIntoView","preventDefault","dataTransfer","dropEffect","ResetHash","files","substr","split","skylark","attach"],"mappings":";;;;;;;g4BAAAA,EAAA,oCACA,kBACA,SAAAC,GACA,IAAAC,EAAA,SAAAC,GAEAC,KAAAC,MAAAJ,EAAA,WAAAK,SAAA,aAAAC,SAAAJ,IA4BA,OAzBAD,EAAAM,UAAAC,OAAA,SAAAC,EAAAC,GAEA,IAAAC,EAAAX,EAAA,QAAAM,SAAAH,KAAAC,OACAJ,EAAA,QAAAY,KAAAH,GAAAH,SAAAK,GACAX,EAAA,QAAAY,KAAAF,GAAAJ,SAAAK,IAGAV,EAAAM,UAAAM,YAAA,SAAAJ,EAAAK,GAEA,IAAAH,EAAAX,EAAA,QAAAM,SAAAH,KAAAC,OACAJ,EAAA,QAAAY,KAAAH,GAAAH,SAAAK,GAEA,IAAAI,EAAAC,SAAAC,cAAA,MACAF,EAAAf,EAAA,QAAAM,SAAAK,GAEAO,EAAAlB,EAAA,SAAAK,SAAA,eAAAC,SAAAS,GACAG,EAAAC,KAAA,QAAA,IAAAL,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAGA,IAFA,IAAAM,EAAAC,IAAAC,wBAAA,IAAAR,EAAA,GAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,IACAS,EAAAH,EAAAI,SAAA,IACAD,EAAAE,OAAA,GACAF,EAAA,IAAAA,EAEAL,EAAAQ,IAAA,aAAA,IAAAH,IAGAtB,IAEAF,EAAA,0CACA,kBACA,SAAAC,GACA,IAAA2B,EAAA,WAEAxB,KAAAD,OAAA,KACAC,KAAAyB,WAAA,KACAzB,KAAA0B,WAAA,MAkCA,OA/BAF,EAAApB,UAAAuB,KAAA,SAAAC,GAEA,OAAA5B,KAAAyB,YACAzB,KAAA6B,QAEA7B,KAAAD,OAAA6B,EAAA7B,OACAC,KAAAyB,WAAA5B,EAAA,SAAAK,SAAA,WAAAC,SAAAN,EAAA,SACAG,KAAA0B,WAAA7B,EAAA,SAAAK,SAAA,kBAAAO,KAAAmB,EAAAE,MAAA3B,SAAAH,KAAAyB,YACAzB,KAAA+B,UAGAP,EAAApB,UAAAyB,MAAA,WAEA,OAAA7B,KAAAyB,aAIAzB,KAAAyB,WAAAO,SACAhC,KAAAyB,WAAA,OAGAD,EAAApB,UAAA2B,OAAA,WAEA,OAAA/B,KAAAyB,aAIAzB,KAAAyB,WAAAF,IAAA,OAAAvB,KAAAD,OAAAkC,SAAAC,MAAAlC,KAAAD,OAAAoC,QAAAnC,KAAAyB,WAAAU,SAAA,EAAA,MACAnC,KAAAyB,WAAAF,IAAA,MAAAvB,KAAAD,OAAAkC,SAAAG,KAAApC,KAAAD,OAAAsC,SAAArC,KAAAyB,WAAAY,UAAA,EAAA,QAGAb,IAEA5B,EAAA,yCACA,kBACA,SAAAC,GAhFA,IAAAyC,EAAA,WAEAtC,KAAAuC,UAAA,KACAvC,KAAA0B,WAAA,MAiFA,OA9EAY,EAAAlC,UAAAuB,KAAA,SAAAC,GAEA,SAAAY,EAAAC,EAAA1C,EAAA2C,GAEA,IAAAC,EAAA9C,EAAA,SAAAK,SAAA,gBAAAO,KAAAiC,EAAAZ,MAAA3B,SAAAJ,GACA4C,EAAAC,MAAA,WACAF,EAAAG,SAAAJ,KAIA,OAAAzC,KAAAuC,WACAvC,KAAA6B,QAGA7B,KAAAuC,UAAA1C,EAAA,SAAAK,SAAA,UAAAC,SAAAN,EAAA,SACAA,EAAA,SAAAK,SAAA,eAAAO,KAAAmB,EAAAkB,OAAA3C,SAAAH,KAAAuC,WACAvC,KAAA0B,WAAA7B,EAAA,SAAAK,SAAA,iBAAAC,SAAAH,KAAAuC,WACA,OAAAX,EAAAE,WAAAiB,IAAAnB,EAAAE,MACA9B,KAAA0B,WAAAjB,KAAAmB,EAAAE,MAEA,IAEAkB,EAAAN,EAFAO,EAAApD,EAAA,SAAAK,SAAA,iBAAAC,SAAAH,KAAAuC,WAGA,IAAAS,EAAA,EAAAA,EAAApB,EAAAsB,QAAA5B,OAAA0B,IACAN,EAAAd,EAAAsB,QAAAF,GACAR,EAAAxC,KAAAiD,EAAAP,GAGA7B,SAAAsC,iBAAA,QAAAnD,KAAAoD,WAAAC,KAAArD,OAAA,GACAA,KAAA+B,UAGAO,EAAAlC,UAAAyB,MAAA,WAEA,OAAA7B,KAAAuC,YAIAvC,KAAAuC,UAAAP,SACAhC,KAAAuC,UAAA,KACA1C,EAAA,QAAAyD,OAAA,WAGAhB,EAAAlC,UAAAmD,cAAA,WAEA,OAAAvD,KAAA0B,YAGAY,EAAAlC,UAAA2B,OAAA,WAEA,OAAA/B,KAAAuC,YAIAvC,KAAAuC,UAAAhB,IAAA,QAAAV,SAAA2C,KAAAC,YAAAzD,KAAAuC,UAAAJ,SAAA,EAAA,MACAnC,KAAAuC,UAAAhB,IAAA,OAAAV,SAAA2C,KAAAE,aAAA1D,KAAAuC,UAAAF,UAAA,EAAA,QAGAC,EAAAlC,UAAAgD,WAAA,SAAAO,GAEA,GAAA,OAAA3D,KAAAuC,UAAA,CAMA,IAFA,IAAAqB,GAAA,EACAC,EAAAF,EAAAE,OACA,OAAAA,GACAA,IAAA7D,KAAAuC,UAAAuB,MAAA,KACAF,GAAA,GAEAC,EAAAA,EAAAE,cAGAH,GACA5D,KAAA6B,UAIAS,IAEA1C,EAAA,+CAAA,WACA,IAAAoE,EAAA,SAAAC,GAEAjE,KAAAiE,IAAAA,GAaA,OAVAD,EAAA5D,UAAA8D,cAAA,WAEA,OAAAlE,KAAAiE,IAAAE,iBAAAD,iBAGAF,EAAA5D,UAAAgE,aAAA,WAEA,OAAApE,KAAAiE,IAAAI,OAAAC,eAGAN,IAEApE,EAAA,2CACA,kBACA,SAAAC,GACA,IAAA0E,EAAA,SAAAxE,GAEAC,KAAAiD,WAAApD,EAAA,SAAAmB,KAAA,KAAA,cAAAb,SAAAJ,IAQA,OALAwE,EAAAnE,UAAA8D,cAAA,WAEA,OAAAlE,KAAAiD,YAGAsB,IAEA3E,EAAA,8CACA,kBACA,SAAAC,GACA,IAAA2E,EAAA,SAAAzE,GAEAC,KAAAD,OAAAA,EACAC,KAAAyE,UAAA,KACAzE,KAAA0B,WAAA,KACA1B,KAAA0E,SAAA,KACA1E,KAAA2E,SAAA,MAuBA,OApBAH,EAAApE,UAAAwE,KAAA,SAAAF,GAEA1E,KAAAyE,UAAA5E,EAAA,SAAAK,SAAA,qBAAAC,SAAAH,KAAAD,QACAC,KAAA0B,WAAA7B,EAAA,SAAAK,SAAA,sBAAAC,SAAAH,KAAAyE,WAEAzE,KAAA0E,SAAAA,EACA1E,KAAA2E,SAAA3E,KAAAyE,UAAAtC,QACAnC,KAAA6E,KAAA,IAGAL,EAAApE,UAAAyE,KAAA,SAAAC,GAEA,IAAAC,EAAA/E,KAAA2E,SAAA3E,KAAA0E,SACAvC,EAAA2C,EAAAC,EACAD,GAAA9E,KAAA0E,WACAvC,EAAAnC,KAAA2E,UAEA3E,KAAA0B,WAAAS,MAAAA,IAGAqC,IAEA5E,EAAA,0CACA,kBACA,SAAAC,GACA,IAAAmF,EAAA,SAAAjF,GAEAC,KAAAiD,WAAApD,EAAA,SAAAmB,KAAA,KAAA,WAAAb,SAAAJ,IAmCA,OAhCAiF,EAAA5E,UAAA6E,QAAA,SAAAnC,GAEA,IAAAoC,EAAArF,EAAA,SAAAmB,KAAA,KAAA,QAAAP,KAAAqC,GAAA3C,SAAAH,KAAAiD,YACAiC,EAAAtC,MAAA,WACAuC,SAAAC,KAAA,GACAD,SAAAE,YAIAL,EAAA5E,UAAAoC,UAAA,SAAA8C,EAAAxC,EAAAyC,GAEA,IAAAC,EAAA3F,EAAA,SAAAK,SAAA,aAAAc,KAAA,MAAAsE,GAAAtE,KAAA,QAAA8B,GAAA3C,SAAAH,KAAAiD,YACAuC,EAAA5C,MAAA,WACA2C,OAIAP,EAAA5E,UAAAqF,gBAAA,SAAAH,EAAAI,EAAA5C,EAAAyC,GAEA,IAAAC,EAAA3F,EAAA,SAAAK,SAAA,aAAAc,KAAA,MAAAsE,GAAAtE,KAAA,QAAA8B,GAAA3C,SAAAH,KAAAiD,YACA0C,GAAA,EACAH,EAAA5C,MAAA,YACA+C,GAAAA,GAEAH,EAAAxE,KAAA,MAAAsE,GAEAE,EAAAxE,KAAA,MAAA0E,GAEAH,OAIAP,IAEApF,EAAA,uCACA,iBACA,wBACA,qBACA,SAAAC,EAAA2E,EAAAQ,GACA,SAAAY,EAAAC,GAEA,YAAA9C,IAAA8C,GAAA,OAAAA,EAGA,IAAAC,EAAA,SAAAC,EAAAzF,EAAAsB,GAEA5B,KAAA+F,UAAAA,EACA/F,KAAA4B,WAAAA,EAEA5B,KAAAgG,YAAA,KACAhG,KAAAiG,OAAA,KACAjG,KAAAkG,eAAA,KACAlG,KAAA0B,WAAA,KAEA1B,KAAAmG,WAAA7F,IAGAwF,EAAA1F,UAAA+F,WAAA,SAAA7F,GAWA,IAAA0C,EAAAoD,EARA,IADApG,KAAAgG,YAAAnG,EAAA,SAAAK,SAAA,YAAAC,SAAAH,KAAA+F,WACAH,EAAA5F,KAAA4B,eACAgE,EAAA5F,KAAA4B,WAAAyE,KACArG,KAAAgG,YAAAhF,KAAA,KAAAhB,KAAA4B,WAAAyE,IAEAT,EAAA5F,KAAA4B,WAAA0E,kBACAtG,KAAAuG,qBAEAX,EAAA5F,KAAA4B,WAAA4E,cAEA,IAAAxD,EAAA,EAAAA,EAAAhD,KAAA4B,WAAA4E,YAAAlF,OAAA0B,IACAoD,EAAApG,KAAA4B,WAAA4E,YAAAxD,GACAhD,KAAAyG,cAAAL,GAKA,IAAAM,EAAA7G,EAAA,SAAAK,SAAA,YAAAO,KAAAH,GAAAU,KAAA,QAAAV,GAAAH,SAAAH,KAAAgG,aACAJ,EAAA5F,KAAA4B,aAAAgE,EAAA5F,KAAA4B,WAAA0E,kBACAI,EAAAnF,IAAA,SAAA,YAIAuE,EAAA1F,UAAAuG,WAAA,SAAArG,EAAAsB,GAEA,OAAA,IAAAkE,EAAA9F,KAAA0B,WAAApB,EAAAsB,IAGAkE,EAAA1F,UAAAmD,cAAA,WAEA,OAAAvD,KAAA0B,YAGAoE,EAAA1F,UAAAmG,mBAAA,WAEA,IAAAK,EAAA5G,KACAA,KAAAiG,QAAA,EACAjG,KAAA0B,WAAA7B,EAAA,SAAAK,SAAA,mBAAA2G,OAAA1G,SAAAH,KAAA+F,WACA/F,KAAAkG,eAAArG,EAAA,SAAAK,SAAA,cAAAc,KAAA,QAAAhB,KAAA4B,WAAA0E,gBAAAxD,OAAA3C,SAAAH,KAAAgG,aACAhG,KAAAkG,eAAAlF,KAAA,MAAA,qBACAhB,KAAAgG,YAAApD,MAAA,WACAgE,EAAAE,SAAAF,EAAAX,WAIAH,EAAA1F,UAAAqG,cAAA,SAAAL,GAEA,IAAAW,EAAAlH,EAAA,SAAAK,SAAA,cAAAc,KAAA,QAAAoF,EAAAtD,OAAA3C,SAAAH,KAAAgG,aACAJ,EAAAQ,EAAAC,KACAU,EAAA/F,KAAA,KAAAoF,EAAAC,IAEAT,EAAAQ,EAAAY,WACAZ,EAAAY,SAAAD,EAAAX,EAAAa,WAEArB,EAAAQ,EAAAb,UAAAK,EAAAQ,EAAAc,eACAH,EAAAnE,MAAA,SAAAuE,GACAA,EAAAC,kBACAD,EAAAE,SAAAzB,EAAAQ,EAAAc,aACAd,EAAAc,YAAAH,EAAAX,EAAAa,UACArB,EAAAQ,EAAAb,UACAa,EAAAb,QAAAwB,EAAAX,EAAAa,aAMAnB,EAAA1F,UAAA0G,QAAA,SAAAb,GAEAjG,KAAAiG,OAAAA,EACAjG,KAAAiG,QACAL,EAAA5F,KAAA4B,WAAA0E,gBAAAgB,SACAtH,KAAA4B,WAAA0E,gBAAAgB,OAAAtH,KAAA0B,WAAA1B,KAAA4B,WAAA0E,gBAAAW,UAEAjH,KAAA0B,WAAA6F,OACAvH,KAAAkG,eAAAlF,KAAA,MAAA,uBAEA4E,EAAA5F,KAAA4B,WAAA0E,gBAAAkB,UACAxH,KAAA4B,WAAA0E,gBAAAkB,QAAAxH,KAAA0B,WAAA1B,KAAA4B,WAAA0E,gBAAAW,UAEAjH,KAAA0B,WAAAmF,OACA7G,KAAAkG,eAAAlF,KAAA,MAAA,uBAIA8E,EAAA1F,UAAAqH,UAAA,SAAAC,GAEAA,EACA1H,KAAAgG,YAAA9F,SAAA,eAEAF,KAAAgG,YAAA2B,YAAA,gBAIA7B,EAAA1F,UAAAwH,cAAA,WAEA,OAAA5H,KAAAgG,YAAA6B,SAAA,gBAGA,IAAAC,EAAA,SAAA/B,GAEA/F,KAAA+F,UAAAA,EACA/F,KAAA+F,UAAAgC,SASA,OANAD,EAAA1H,UAAA4H,SAAA,SAAA1H,EAAAsB,GAEA,OAAA,IAAAkE,EAAA9F,KAAA+F,UAAAzF,EAAAsB,IAIAkG,IAGAlI,EAAA,yCACA,kBACA,qBACA,SAAAqI,EAAA/G,GACAA,EAAA+G,MAAAA,EAEA,IAAAC,EAAA,WAEAlI,KAAAqE,OAAA,KACArE,KAAAmI,SAAA,MAkNA,OA/MAD,EAAA9H,UAAAwE,KAAA,SAAAwD,GAQApI,KAAAqE,OAAA,IAAAnD,EAAAmH,YACA,IAAAC,EAAAzH,SAAA0H,eAAAH,GACA,QAAApI,KAAAqE,OAAAmE,MAAAF,GAPAG,mBAAA,GAAA,EAAA,GACAC,sBAAA,EAAA,EAAA,GACAC,gBAAA,EAAA,EAAA,OAQA3I,KAAAqE,OAAAuE,WAAAC,qBAAA,IACA7I,KAAAqE,OAAAuE,WAAAE,oBAAA,KACA9I,KAAAqE,OAAA0E,cAAA,UACA/I,KAAAqE,OAAA2E,QAEA,IAGAd,EAAA9H,UAAAkE,YAAA,WAEA,OAAAtE,KAAAmI,UAGAD,EAAA9H,UAAA6I,YAAA,SAAAd,GAEAnI,KAAAmI,SAAAA,GAGAD,EAAA9H,UAAA8I,aAAA,WAEAlJ,KAAAqE,OAAA6E,gBAGAhB,EAAA9H,UAAA+I,cAAA,SAAAC,GAEApJ,KAAAkJ,eAEA,IAAAtC,EAAA5G,KACAqJ,EAAA,EACAC,GACAC,QAAA,SAAAC,GACAJ,EAAAG,QAAAC,GACA5C,EAAAvC,OAAAoF,YAAA,IAEAC,WAAA,SAAAC,EAAAC,GACA,KAAAP,EAAAO,EAAAtI,QACAsF,EAAAvC,OAAAwF,QAAAD,EAAAP,IACAA,GAAA,EAEAD,EAAAM,WAAAC,IAEAG,SAAA,SAAAF,GACAhD,EAAAmD,qBAAA,IACAnD,EAAAoD,cACApD,EAAAvC,OAAAoF,YAAA,GACA7C,EAAAvC,OAAA2E,OACAI,EAAAU,SAAAF,KAIA1I,EAAA+I,6BAAAjK,KAAAmI,SAAAnI,KAAAgJ,KAAA3F,KAAArD,MAAAsJ,IAGApB,EAAA9H,UAAA8J,uBAAA,SAAAC,EAAAC,GAEA,IAEApH,EAFAqH,EAAArK,KAAAqE,OAAAiG,wBAAAH,EAAAC,GACAR,KAEA,IAAA5G,EAAA,EAAAA,EAAAqH,EAAA/I,OAAA0B,IACAqH,EAAArH,GAAAuH,kBAAAtC,EAAAuC,MACAZ,EAAAa,KAAAJ,EAAArH,GAAAuH,QAGA,OAAAX,GAGA1B,EAAA9H,UAAAsK,SAAA,SAAAC,EAAApD,GAEAvH,KAAAqE,OAAAuG,MAAAC,SAAA,SAAAC,GACAA,aAAA7C,EAAAuC,MACAM,EAAAC,uBAAAJ,IAEAG,EAAAE,UADAzD,MAUAW,EAAA9H,UAAA6K,oBAAA,SAAAC,GAEA,IAAAC,KAUA,OATAnL,KAAAqE,OAAAuG,MAAAC,SAAA,SAAAC,GACAA,aAAA7C,EAAAuC,MACAM,EAAAM,2BAAAF,IACA,IAAAC,EAAA7J,QAAA6J,EAAAA,EAAA7J,OAAA,IAAAwJ,EAAAC,uBACAI,EAAAV,KAAAK,EAAAC,0BAKAI,GAGAjD,EAAA9H,UAAAiL,cAAA,SAAAV,EAAAjD,GAEA1H,KAAAqE,OAAAuG,MAAAC,SAAA,SAAAC,GACAA,aAAA7C,EAAAuC,MACAM,EAAAC,uBAAAJ,IACAjD,EACAoD,EAAAQ,SAAAC,SAAAC,OAAA,SAEAV,EAAAQ,SAAAC,SAAAC,OAAA,OAOAtD,EAAA9H,UAAA4J,YAAA,WAEAhK,KAAAqE,OAAA2F,eAGA9B,EAAA9H,UAAAqL,gBAAA,SAAAd,GAEA,IAAAf,KACA5J,KAAAqE,OAAAuG,MAAAC,SAAA,SAAAC,GACAA,aAAA7C,EAAAuC,MACAM,EAAAC,uBAAAJ,GACAf,EAAAa,KAAAK,KAIA9K,KAAAqE,OAAAqH,kBAAA9B,IAGA1B,EAAA9H,UAAAsL,kBAAA,SAAAP,GAEA,IAAAvB,KACA5J,KAAAqE,OAAAuG,MAAAC,SAAA,SAAAC,GACAA,aAAA7C,EAAAuC,OACA,GAAAW,EAAAQ,QAAAb,EAAAC,wBACAnB,EAAAa,KAAAK,KAIA9K,KAAAqE,OAAAqH,kBAAA9B,IAGA1B,EAAA9H,UAAA2J,qBAAA,WAEA/J,KAAAqE,OAAAuH,YAAA,GACA5L,KAAAqE,OAAA0F,qBAAA,KAIA7B,EAAA9H,UAAAyL,SAAA,WAEA7L,KAAAqE,OAAAuE,WAAAkD,aAAA9L,KAAAqE,OAAAuE,WAAAmD,cAGA7D,EAAA9H,UAAA4L,aAAA,SAAAC,GAEA,IAAAC,EAAAC,EAAAC,EACA,GAAA,KAAAH,EACAC,EAAA,IAAAhL,EAAAmL,MAAA,EAAA,EAAA,GACAF,EAAA,IAAAjL,EAAAmL,MAAA,EAAA,EAAA,GACAD,EAAA,IAAAlL,EAAAmL,MAAA,EAAA,EAAA,QACA,GAAA,MAAAJ,EACAC,EAAA,IAAAhL,EAAAmL,OAAA,EAAA,EAAA,GACAF,EAAA,IAAAjL,EAAAmL,MAAA,EAAA,EAAA,GACAD,EAAA,IAAAlL,EAAAmL,MAAA,EAAA,GAAA,QACA,GAAA,KAAAJ,EACAC,EAAA,IAAAhL,EAAAmL,MAAA,EAAA,EAAA,GACAF,EAAA,IAAAjL,EAAAmL,MAAA,EAAA,EAAA,GACAD,EAAA,IAAAlL,EAAAmL,MAAA,EAAA,EAAA,QACA,GAAA,MAAAJ,EACAC,EAAA,IAAAhL,EAAAmL,OAAA,EAAA,EAAA,GACAF,EAAA,IAAAjL,EAAAmL,MAAA,EAAA,EAAA,GACAD,EAAA,IAAAlL,EAAAmL,MAAA,GAAA,EAAA,QACA,GAAA,KAAAJ,EACAC,EAAA,IAAAhL,EAAAmL,MAAA,EAAA,EAAA,GACAF,EAAA,IAAAjL,EAAAmL,MAAA,EAAA,EAAA,GACAD,EAAA,IAAAlL,EAAAmL,MAAA,EAAA,EAAA,OACA,CAAA,GAAA,MAAAJ,EAKA,OAJAC,EAAA,IAAAhL,EAAAmL,MAAA,GAAA,EAAA,GACAF,EAAA,IAAAjL,EAAAmL,MAAA,EAAA,EAAA,GACAD,EAAA,IAAAlL,EAAAmL,OAAA,EAAA,EAAA,GAKArM,KAAAqE,OAAAiI,WAAAC,IAAAL,EAAAC,EAAAC,GACApM,KAAAqE,OAAA2F,eAGA9B,EAAA9H,UAAA4I,KAAA,WAEAhJ,KAAAqE,OAAA2E,QAGAd,IAGAtI,EAAA,sCACA,iBACA,oBACA,cACA,oBACA,mBACA,uBACA,qBACA,wBACA,oBACA,iBACA,oBACA,SAAAC,EAAAqB,EAAApB,EAAA0B,EAAAc,EAAA0B,EAAAO,EAAAC,EAAAQ,EAAA8C,EAAAI,GACA,IAAAsE,EAAA,WAEAxM,KAAAsI,OAAA,KACAtI,KAAAqE,OAAA,KACArE,KAAAyM,UAAA,KACAzM,KAAA0M,YAAA,EACA1M,KAAA2M,YAAA,KACA3M,KAAA4M,kBAAA,KACA5M,KAAA6M,cAAA,KACA7M,KAAA8M,cACA9M,KAAA+M,gBAAA,KACA/M,KAAAmE,iBAAA,KACAnE,KAAAgN,aAAA,KACAhN,KAAAiN,eAAA,KACAjN,KAAAkN,SAAA,KACAlN,KAAAmN,aAAA,MA2sBA,OAxsBAX,EAAApM,UAAAwE,KAAA,WAEA,GAAA1D,EAAAkM,kBAAAlM,EAAAmM,mBAAA,CAeA,IAAAzG,EAAA5G,KACAoC,EAAAvC,EAAA,QACAG,KAAA+M,gBAAA,IAAA/H,EAAA5C,GACApC,KAAA+M,gBAAA9H,QAAA,yDACAjF,KAAA+M,gBAAAvK,UAAA,sBAAA,YAAA,WAAAoE,EAAA0G,aACAtN,KAAA+M,gBAAAvK,UAAA,yBAAA,gBAAA,WAAAoE,EAAAoD,gBACAhK,KAAA+M,gBAAAtH,gBAAA,mBAAA,uBAAA,iCAAA,WAAAmB,EAAAiF,aACA7L,KAAA+M,gBAAAvK,UAAA,iBAAA,oBAAA,WAAAoE,EAAAoF,aAAA,OACAhM,KAAA+M,gBAAAvK,UAAA,oBAAA,qBAAA,WAAAoE,EAAAoF,aAAA,QACAhM,KAAA+M,gBAAAvK,UAAA,mBAAA,oBAAA,WAAAoE,EAAAoF,aAAA,OACAhM,KAAA+M,gBAAAvK,UAAA,kBAAA,qBAAA,WAAAoE,EAAAoF,aAAA,QACAhM,KAAA+M,gBAAAvK,UAAA,kBAAA,oBAAA,WAAAoE,EAAAoF,aAAA,OACAhM,KAAA+M,gBAAAvK,UAAA,mBAAA,qBAAA,WAAAoE,EAAAoF,aAAA,QAEAhM,KAAAmE,iBAAA,IAAAI,EAAAnC,GACApC,KAAAgN,aAAA,IAAAxL,EACAxB,KAAAiN,eAAA,IAAA3K,EAEA,IAAAiL,EAAAC,OAAAC,WAAA,8BACAzN,KAAAkN,SAAAK,EAAAG,QAEAF,OAAArK,iBAAA,SAAAnD,KAAA+B,OAAAsB,KAAArD,OAAA,GACAA,KAAA+B,SAGA/B,KAAAsI,OAAAzI,EAAA,gBACAG,KAAA2N,sBACA3N,KAAAqE,OAAA,IAAA6D,EACAlI,KAAAqE,OAAAO,KAJA,eAMA4I,OAAArK,iBAAA,WAAAnD,KAAA4N,SAAAvK,KAAArD,OAAA,GACAwN,OAAArK,iBAAA,OAAAnD,KAAA6N,KAAAxK,KAAArD,OAAA,GAEA,IAAA8N,EAAAjN,SAAA0H,eAAA,QACAuF,EAAA3K,iBAAA,SAAAnD,KAAA+N,aAAA1K,KAAArD,OAAA,GAEAwN,OAAAQ,aAAAhO,KAAAiO,kBAAA5K,KAAArD,MACA,IAAAkO,EAAAlO,KAAAiO,oBACAC,GAAAlO,KAAAkN,UACAlN,KAAAmO,uBAtDA,CACA,KAAAtN,SAAA2C,KAAA4K,WACAvN,SAAA2C,KAAA6K,YAAAxN,SAAA2C,KAAA4K,WAGA,IAAAE,EAAAzO,EAAA,SAAAK,SAAA,aAAAC,SAAAN,EAAA,SACAyO,EAAA7N,MACA,uBACAT,KAAAuO,iBACA,uKACA,UACAC,KAAA,OA+CAhC,EAAApM,UAAAqO,kBAAA,WAEA,OAAAzO,KAAAmN,eACAnN,KAAAmN,aAAAnL,SACAhC,KAAAmN,aAAA,OAIAX,EAAApM,UAAAsO,gBAAA,WAEA1O,KAAAmN,aAAAtN,EAAA,SAAAmB,KAAA,KAAA,gBAAA6F,OAAA1G,SAAAN,EAAA,UAGA2M,EAAApM,UAAAuO,aAAA,SAAAC,GAEA,GAAAA,EAAAC,YAAA,CAIA,IAAAC,EAAA,IAAA9K,EAAAhE,MACA4O,EAAAhK,KAAAkK,KAGAtC,EAAApM,UAAA+N,iBAAA,WAEA,IAAAY,GACA,+BACA/O,KAAAuO,iBACA,UACAC,KAAA,IACAxO,KAAAgN,aAAArL,MACA5B,OAAAC,KAAAsI,OACAxG,KAAAiN,IAEA/O,KAAA+B,UAGAyK,EAAApM,UAAA4O,iBAAA,WAEAhP,KAAAgN,aAAAnL,QACA7B,KAAA+B,UAGAyK,EAAApM,UAAAmO,eAAA,WAEA,IAAAU,GACA,+DACA,mQACA,+EACA,yMACA,6IACAT,KAAA,IACA,OAAAS,GAGAzC,EAAApM,UAAA2B,OAAA,WAQA,SAAAmN,EAAAC,EAAA5O,GAEA4O,EAAA9M,OAAA9B,EACA4O,EAAAC,MAAA/M,OAAA9B,EAAA,KAGA,IAZA4O,EAAA5O,EAYA6B,EAAAvB,SAAA0H,eAAA,OACArG,EAAArB,SAAA0H,eAAA,QACAD,EAAAzH,SAAA0H,eAAA,eACAlG,EAAAxB,SAAA2C,KAAAE,aAAAtB,EAAAiN,aAEAH,EAAAhN,EAAAG,GACA6M,EAAA5G,EAAAjG,GAlBA8M,EAmBA7G,EAnBA/H,EAmBAM,SAAA2C,KAAAC,YAAAvB,EAAAoN,YAjBAH,EAAAhN,MAAA5B,EACA4O,EAAAC,MAAAjN,MAAA5B,EAAA,KAkBAP,KAAAgN,aAAAjL,SACA/B,KAAAiN,eAAAlL,UAGAyK,EAAApM,UAAAmP,WAAA,SAAAC,GAEAxP,KAAAyP,SAAAD,IAGAhD,EAAApM,UAAAsP,aAAA,WAEA,SAAAC,EAAAC,EAAAtP,EAAA+F,GAEA,IAAAwJ,EAAAD,EAAA5H,SAAA1H,GACA+F,GAAAA,EACAC,iBACAxD,MAAA,aAAAxC,KAGA,OAAAuP,EA0BA,SAAAC,EAAAC,EAAAC,EAAAC,EAAA/E,EAAAI,GAEA,IAAA4E,EAAAD,EAAAtJ,WAAA2E,EAAAhL,MACAgG,iBACAxD,MAAA,wBACAwE,OAAA,SAAA5F,EAAA4J,GACA5J,EAAAqG,QACA,IAAAoI,EAAAtQ,EAAA,SAAAK,SAAA,kBAAAC,SAAAuB,GACA0O,EAAAvQ,EAAA,SAAAK,SAAA,iBAAAc,KAAA,MAAA,4BAAAA,KAAA,QAAA,gCAAAb,SAAAgQ,GACAC,EAAAxN,MAAA,WACAmN,EAAAM,0BAAAnF,KAEA,IAAAoF,EAAAzQ,EAAA,SAAAK,SAAA,iBAAAc,KAAA,MAAA,+BAAAA,KAAA,QAAA,oCAAAb,SAAAgQ,GACAG,EAAA1N,MAAA,WACAmN,EAAAQ,4BAAArF,KAEA,IAAAjL,EAAA,IAAAH,EAAA4B,GACAzB,EAAAS,YAAA,UAAA4K,EAAAkF,SACAvQ,EAAAS,YAAA,UAAA4K,EAAAmF,SACAxQ,EAAAS,YAAA,WAAA4K,EAAAoF,UACAzQ,EAAAI,OAAA,YAAAiL,EAAAqF,UAAAC,QAAA,IACA3Q,EAAAI,OAAA,UAAAiL,EAAAuF,QAAAD,QAAA,KAEA3J,SAAAqE,KAGA,OAAA4E,EAGA,SAAArG,EAAAkG,EAAAC,EAAArD,EAAAmE,EAAAC,GAEA,SAAAC,EAAAjB,EAAArO,EAAAuP,EAAAF,GAcA,IAAAG,EAAArR,EAAA,SAAAK,SAAA,kBAAAC,SAAAuB,GACA4O,EAAAzQ,EAAA,SAAAK,SAAA,iBAAAc,KAAA,MAAA,+BAAAA,KAAA,QAAA,sBAAAb,SAAA+Q,GACAZ,EAAA1N,MAAA,WACAmN,EAAAtE,gBAAAsF,KAEA,IAAAX,EAAAvQ,EAAA,SAAAK,SAAA,iBAAAc,KAAA,MAAA,4BAAAA,KAAA,QAAA,kBAAAb,SAAA+Q,GACAd,EAAAxN,MAAA,WACAmN,EAAA1E,cAAA0F,KAEA,IAAAI,EAAAtR,EAAA,SAAAK,SAAA,iBAAAc,KAAA,MAAA,8BAAAA,KAAA,QAAA,+BAAAb,SAAA+Q,GACAC,EAAAvO,MAAA,WAtBA,IAAAd,EACAsP,EADAtP,EAuBAmP,GAtBAG,EAAAvQ,SAAAC,cAAA,UACAsO,MAAAiC,SAAA,WACAD,EAAAhC,MAAAlN,KAAA,IACAkP,EAAAhC,MAAAhN,IAAA,IACAgP,EAAAE,aAAA,QAAAxP,GACAjB,SAAA2C,KAAA+N,YAAAH,GACAA,EAAAI,SACA3Q,SAAA4Q,YAAA,QACA5Q,SAAA2C,KAAA6K,YAAA+C,KAkBA,IAAAM,EAAA,KACAC,EAAAhF,EAAAhG,WAAAmK,EAAAxQ,MACA+F,GAAA,gBAAA0K,EAAA1P,WACAiF,iBACAxD,MAAA,oBACAwE,OAAA,SAAA5F,EAAAoP,GACApP,EAAAqG,QAEAiJ,EAAAjB,EAAArO,EAAAoP,EAAAxQ,KAAAyQ,GACA,IAIA/N,EAAA4O,EAJA3R,EAAA,IAAAH,EAAA4B,GAEAmQ,EAAA,IAAA3Q,EAAAmL,MAAAnL,EAAA4Q,IAAA5Q,EAAA4Q,IAAA5Q,EAAA4Q,KACAC,EAAA,IAAA7Q,EAAAmL,OAAAnL,EAAA4Q,KAAA5Q,EAAA4Q,KAAA5Q,EAAA4Q,KAEA,IAAA9O,EAAA,EAAAA,EAAA8N,EAAAkB,SAAA1Q,OAAA0B,GAAA,EACA4O,EAAA,IAAA1Q,EAAAmL,MAAAyE,EAAAkB,SAAAhP,GAAA8N,EAAAkB,SAAAhP,EAAA,GAAA8N,EAAAkB,SAAAhP,EAAA,IACA6O,EAAA1H,EAAAjJ,EAAA+Q,QAAAJ,EAAA1H,EAAAyH,EAAAzH,GACA0H,EAAAzH,EAAAlJ,EAAA+Q,QAAAJ,EAAAzH,EAAAwH,EAAAxH,GACAyH,EAAAK,EAAAhR,EAAA+Q,QAAAJ,EAAAK,EAAAN,EAAAM,GACAH,EAAA5H,EAAAjJ,EAAAiR,QAAAJ,EAAA5H,EAAAyH,EAAAzH,GACA4H,EAAA3H,EAAAlJ,EAAAiR,QAAAJ,EAAA3H,EAAAwH,EAAAxH,GACA2H,EAAAG,EAAAhR,EAAAiR,QAAAJ,EAAAG,EAAAN,EAAAM,GAEAjS,EAAAI,OAAA,UAAA0R,EAAA5H,EAAA0H,EAAA1H,GAAAyG,QAAA,IACA3Q,EAAAI,OAAA,UAAA0R,EAAA3H,EAAAyH,EAAAzH,GAAAwG,QAAA,IACA3Q,EAAAI,OAAA,UAAA0R,EAAAG,EAAAL,EAAAK,GAAAtB,QAAA,IAEA,IACAwB,EADAC,EAAA,EAEA,IAAArP,EAAA,EAAAA,EAAA8N,EAAAsB,UAAA9Q,OAAA0B,IACAoP,EAAAtB,EAAAsB,UAAApP,GACAqP,GAAAD,EAAAxQ,WAAAN,OAAA,EAGArB,EAAAI,OAAA,eAAAyQ,EAAAkB,SAAA1Q,OAAA,GACArB,EAAAI,OAAA,iBAAAgS,IAEApL,SAAA6J,GAEAtK,cAEAH,GAAA,gBAAA0K,EACAjO,MAAA,iBACAkE,SAAA,SAAA1B,GACAA,EAAAtE,KAAA,MAAA,sBACA0Q,EAAApM,GAEAC,QAAA,SAAAD,EAAAyL,GACAhB,EAAAuC,aAAAvB,IAEA7J,YAAA,SAAA5B,EAAAyL,GACAhB,EAAAwC,YAAAxB,IAEA9J,SAAA8J,MAOA,OAFAY,EAAAa,WAAA,EACAb,EAAAD,aAAAA,EACAC,EAGA,IAMA3O,EANAmF,EAAAnI,KAAAqE,OAAAC,cACAsL,EAAA/P,EAAA,SACAmQ,EAAA,IAAAlI,EAAA8H,GAEA6C,EAAA9C,EAAAK,EAAA,QAAA,iBAGA,IAFAyC,EAAA9L,WAAA3G,KAAAyM,UAAAiG,MAEA1P,EAAA,EAAAA,EAAAhD,KAAAyM,UAAAkG,UAAArR,OAAA0B,IACAyP,EAAA9L,WAAA3G,KAAAyM,UAAAkG,UAAA3P,IAGA,GAAAhD,KAAAyM,UAAAmG,QAAAtR,OAAA,EAAA,CACA,IAAAuR,EAAAlD,EAAAK,EAAA,gBAAA,wBACA,IAAAhN,EAAA,EAAAA,EAAAhD,KAAAyM,UAAAmG,QAAAtR,OAAA0B,IACA6P,EAAAlM,WAAA3G,KAAAyM,UAAAmG,QAAA5P,IAIA,IAAA8P,EAAAnD,EAAAK,EAAA,cAAA,wBApKA,SAAA8C,EAAA3K,GAEA,IAMAnF,EAAA+P,EAAAjC,EAAAsB,EANAY,EAAA,IAAAlT,EAAAgT,EAAAvP,iBAEA0P,EAAA9K,EAAA+K,UAAA5R,OACA6R,EAAA,EACAd,EAAA,EAGA,IAAArP,EAAA,EAAAA,EAAAmF,EAAAyB,OAAAtI,OAAA0B,IAGA,IAFA8N,EAAA3I,EAAAyB,OAAA5G,GACAmQ,GAAArC,EAAAkB,SAAA1Q,OAAA,EACAyR,EAAA,EAAAA,EAAAjC,EAAAsB,UAAA9Q,OAAAyR,IACAX,EAAAtB,EAAAsB,UAAAW,GACAV,GAAAD,EAAAxQ,WAAAN,OAAA,EAIA0R,EAAA3S,OAAA,iBAAA4S,GACAD,EAAA3S,OAAA,eAAA8S,GACAH,EAAA3S,OAAA,iBAAAgS,GAiJAe,CAAAN,EAAA3K,GAEAnI,KAAA4M,qBACA,IACAtB,EAAA4E,EASAY,EAAAa,EAVA1B,EAAAN,EAAAK,EAAA,YAAA,qBAEA,IAAAhN,EAAA,EAAAA,EAAAmF,EAAA+K,UAAA5R,OAAA0B,IACAsI,EAAAnD,EAAA+K,UAAAlQ,GACAkN,EAAAJ,EAAA9P,KAAAgQ,EAAAC,EAAAjN,EAAAsI,GACAtL,KAAA4M,kBAAAnC,KAAAyF,GAMA,IAHAlQ,KAAA2M,YAAAgD,EAAAK,EAAA,SAAA,kBACAhQ,KAAA6M,iBAEA7J,EAAA,EAAAA,EAAAmF,EAAAyB,OAAAtI,OAAA0B,IACA8N,EAAA3I,EAAAyB,OAAA5G,GACA2O,EAAA9H,EAAA7J,KAAAgQ,EAAAhQ,KAAA2M,YAAAmE,EAAA9N,GACAhD,KAAA6M,cAAApC,KAAAkH,GAGA3R,KAAA+B,UAGAyK,EAAApM,UAAAiT,cAAA,SAAAC,GAEAtT,KAAAqE,OAAA6E,eACA,IAAA0G,EAAA/P,EAAA,SACA+P,EAAA7H,QAEA/H,KAAAiN,eAAAtL,MACAmB,MAAA,QACAhB,KAAA,+BAAAwR,EAAA,SACApQ,UAEApB,KAAA,KACAe,SAAA,SAAAJ,GACAA,EAAAZ,cAOA2K,EAAApM,UAAAqP,SAAA,SAAAD,GAEA,SAAA+D,EAAAxD,EAAAP,EAAAgE,GAEAzD,EAAArD,YAAA,EACA,IAAApD,GACAC,QAAA,SAAAC,GACAgG,EAAA5K,KAAA4E,IAEAE,WAAA,SAAAC,GACA6F,EAAA3K,KAAA8E,EAAA,IAEAG,SAAA,WACAiG,EAAAL,eACAK,EAAArD,YAAA,EACAqD,EAAArB,oBAIA,GAAA8E,EAAA,CACA,IAAArL,EAAA4H,EAAA1L,OAAAC,cACAyL,EAAA1L,OAAA4E,YAAA/H,EAAAuS,oBAAAtL,IAEA4H,EAAA1L,OAAA8E,cAAAG,GAGA,IAAAnB,EAAAnI,KAAAqE,OAAAC,cACA,GAAA,IAAA6D,EAAA+K,UAAA5R,QAAA,IAAA6G,EAAAyB,OAAAtI,OAGA,OAFAtB,KAAAqT,cAAA,sEACArT,KAAA0O,kBAIA,IAAA9H,EAAA5G,KACAmI,EAAAyB,OAAAtI,OAAA,IACAtB,KAAAiN,eAAAtL,MACAmB,MAAA,cACAhB,KAAA,oJACAoB,UAEApB,KAAA,MACAe,SAAA,SAAAJ,GACA8Q,EAAA3M,EAAA4I,GAAA,GACA/M,EAAAZ,WAIAC,KAAA,KACAe,SAAA,SAAAJ,GACA8Q,EAAA3M,EAAA4I,GAAA,GACA/M,EAAAZ,aAMA0R,EAAA3M,EAAA4I,GAAA,IAIAhD,EAAApM,UAAA4J,YAAA,WAEAhK,KAAAqE,OAAA2F,eAGAwC,EAAApM,UAAAqL,gBAAA,SAAAsF,GAEA/Q,KAAAqE,OAAAoH,gBAAAsF,IAGAvE,EAAApM,UAAAmQ,4BAAA,SAAArF,GAEA,IAAAC,EAAAnL,KAAAqE,OAAA4G,oBAAAC,GACA,IAAAC,EAAA7J,QAGAtB,KAAAqE,OAAAqH,kBAAAP,IAGAqB,EAAApM,UAAAyL,SAAA,WAEA7L,KAAAqE,OAAAwH,YAGAW,EAAApM,UAAA4L,aAAA,SAAAC,GAEAjM,KAAAqE,OAAA2H,aAAAC,IAGAO,EAAApM,UAAAsT,QAAA,SAAAC,GAEA3T,KAAAqE,OAAAqP,QAAAC,IAGAnH,EAAApM,UAAAkS,aAAA,SAAAvB,GAEA,IAAAY,EAAA3R,KAAA6M,cAAAkE,GACA/Q,KAAA4T,qBAAA7C,GAAAY,EAAAa,WACAxS,KAAAqE,OAAA2E,QAGAwD,EAAApM,UAAAmS,YAAA,SAAAxB,GAEA,IAeA/N,EAbA6Q,GAAA,EACA,GAAA7T,KAAA6M,cAAAkE,GAAAyB,WAGA,IAAAxP,EAAA,EAAAA,EAAAhD,KAAA6M,cAAAvL,OAAA0B,IAEA,GADAhD,KAAA6M,cAAA7J,GACAwP,WAAAxP,IAAA+N,EAAA,CACA8C,GAAA,EACA,YANAA,GAAA,EAYA,IAAA7Q,EAAA,EAAAA,EAAAhD,KAAA6M,cAAAvL,OAAA0B,IACA6Q,EACA7T,KAAA4T,qBAAA5Q,GAAA,GAEAA,GAAA+N,EACA/Q,KAAA4T,qBAAA5Q,GAAA,GAEAhD,KAAA4T,qBAAA5Q,GAAA,GAKAhD,KAAAqE,OAAA2E,QAGAwD,EAAApM,UAAAwT,qBAAA,SAAA7C,EAAAyB,GAEA,IAAAb,EAAA3R,KAAA6M,cAAAkE,GACAY,EAAAa,UAAAA,EACAb,EAAAD,aAAA1Q,KAAA,MAAA2Q,EAAAa,UAAA,qBAAA,qBACAxS,KAAAqE,OAAAqG,SAAAqG,EAAAY,EAAAa,YAGAhG,EAAApM,UAAA0T,sBAAA,SAAA/C,EAAArJ,GAEA,IAAAiK,EAAA3R,KAAA6M,cAAAkE,GACAY,EAAAlK,UAAAC,GACA1H,KAAAqE,OAAAgH,cAAA0F,EAAArJ,IAGA8E,EAAApM,UAAA2T,aAAA,SAAAC,EAAAC,GAKA,GAHAjU,KAAAyO,oBACAzO,KAAAgP,mBACAhP,KAAAiN,eAAApL,SACA7B,KAAA0M,WAAA,CAIA,IAAAwH,EAAAF,EACA,GAAA,IAAAE,EAAA5S,OAAA,CAIAtB,KAAAyM,UAAA,KAEA,IAAA7F,EAAA5G,KACAmU,EAAAjT,EAAAkT,0BACAH,IACAE,EAAAjT,EAAAmT,0BAGA,IAAAzE,EAAA/P,EAAA,SACA+P,EAAA7H,QACAkM,EACArE,EAAAnP,KAAA,wBAEAmP,EAAAnP,KAAA,oBAGA0T,EAAAD,GACAI,QAAA,WACA1N,EAAAyM,cAAA,sEACAzM,EAAA8H,mBAGA6F,QAAA,SAAA9H,EAAAtE,GACAvB,EAAA6F,UAAAA,EACA7F,EAAAvC,OAAA4E,YAAAd,GACAyH,EAAA7H,QACA,IAAAyH,EAAA,IAAAhL,EAAAoL,GACAhJ,EAAA2I,WAAAC,SAKAhD,EAAApM,UAAAuN,oBAAA,WAEA,IAAA/G,EAAA5G,KACAwU,EAAA,KACAxU,KAAAsI,OAAAmM,UAAA,WACAD,GAAArN,MAAAuN,MAAAvN,MAAAwN,SAEA3U,KAAAsI,OAAAsM,QAAA,SAAAzN,GACA,IAAA0N,EAAA,MAAAL,GAAArN,EAAAuN,OAAAF,EAAA,IAAArN,EAAAwN,OAAAH,EAAA,GACA,IAAAK,EAAA,CACA,IAAA1K,EAAAhD,EAAAuN,MAAA7U,EAAAG,MAAAiC,SAAAC,KACAkI,EAAAjD,EAAAwN,MAAA9U,EAAAG,MAAAiC,SAAAG,IACAwE,EAAAkO,cAAA3K,EAAAC,GAEAoK,EAAA,QAIAhI,EAAApM,UAAA2U,mBAAA,SAAAhE,GAEA,IAAA,GAAAA,EAAA,CAGA,IAAAiE,EAAAhV,KAAA6M,cAAAkE,GACAiE,EAAAhP,YAAAlC,IAAA,GAAAmR,mBAGAzI,EAAApM,UAAAiL,cAAA,SAAA0F,GAEA,IAAA/N,EAAAgS,EACA,IAAA,GAAAjE,EACA,IAAA/N,EAAA,EAAAA,EAAAhD,KAAA6M,cAAAvL,OAAA0B,IACAgS,EAAAhV,KAAA6M,cAAA7J,IACA,EACAA,GAAA+N,IACAiE,EAAApN,gBAGA5H,KAAA8T,sBAAA9Q,GAAA,GAFAhD,KAAA8T,sBAAA9Q,GAAA,SAOA,IAAAA,EAAA,EAAAA,EAAAhD,KAAA6M,cAAAvL,OAAA0B,KACAgS,EAAAhV,KAAA6M,cAAA7J,IACA4E,iBACA5H,KAAA8T,sBAAA9Q,GAAA,GAKAhD,KAAAqE,OAAA2E,QAGAwD,EAAApM,UAAAiQ,0BAAA,SAAAnF,GAEA,IAAAC,EAAAnL,KAAAqE,OAAA4G,oBAAAC,GACA,GAAA,IAAAC,EAAA7J,OAAA,CAIA,IAAA0B,EAAA+N,EAEA,IADA/Q,KAAAqL,eAAA,GACArI,EAAA,EAAAA,EAAAmI,EAAA7J,OAAA0B,IACA+N,EAAA5F,EAAAnI,GACAhD,KAAA6M,cAAAkE,GACA/Q,KAAA8T,sBAAA/C,GAAA,GAGA/Q,KAAA2M,YAAA7F,SAAA,GACA9G,KAAA+U,mBAAA5J,EAAA,IACAnL,KAAAqE,OAAA2E,SAGAwD,EAAApM,UAAA0U,cAAA,SAAA3K,EAAAC,GAEA,GAAA,MAAApK,KAAA6M,cAAA,CAGA,IAAAxC,EAAArK,KAAAqE,OAAA6F,uBAAAC,EAAAC,GACA2G,GAAA,EACA1G,EAAA/I,OAAA,IACAyP,EAAA1G,EAAA,GAAAU,sBACA/K,KAAA2M,YAAA7F,SAAA,IAGA9G,KAAAqL,cAAA0F,GACA/Q,KAAA+U,mBAAAhE,KAGAvE,EAAApM,UAAAwN,SAAA,SAAAzG,GAEAA,EAAAC,kBACAD,EAAA+N,iBACA/N,EAAAgO,aAAAC,WAAA,QAGA5I,EAAApM,UAAAyN,KAAA,SAAA1G,GAEAA,EAAAC,kBACAD,EAAA+N,iBACAlV,KAAAqV,YACArV,KAAA+T,aAAA5M,EAAAgO,aAAAG,OAAA,IAGA9I,EAAApM,UAAA2N,aAAA,SAAA5G,GAEAA,EAAAC,kBACAD,EAAA+N,iBACAlV,KAAAqV,YACArV,KAAA+T,aAAA5M,EAAAtD,OAAAyR,OAAA,IAGA9I,EAAApM,UAAAkN,SAAA,WAEA,IAAAQ,EAAAjN,SAAA0H,eAAA,QACAuF,EAAAlL,SAGA4J,EAAApM,UAAAiV,UAAA,WAEA7H,OAAArI,SAAAC,KAAA9D,OAAA,IACAkM,OAAArI,SAAAC,KAAA,KAIAoH,EAAApM,UAAA6N,kBAAA,WAEA,GAAAT,OAAArI,SAAAC,KAAA9D,OAAA,EACA,OAAA,EAGA,IAAAwM,EAAAjO,EAAA,SACAuF,EAAAoI,OAAArI,SAAAC,KACA,GAAA,aAAAA,EAKA,OAJA0I,EAAAvM,IAAA,UAAA,IACAuM,EAAAvM,IAAA,WAAA,YACAuM,EAAAvM,IAAA,QAAA,QACAuM,EAAAvM,IAAA,SAAA,SACA,EAGAuM,EAAAvM,IAAA,UAAA,QACA,IAAA6D,EAAAA,EAAAmQ,OAAA,EAAAnQ,EAAA9D,OAAA,GACA0S,EAAA5O,EAAAoQ,MAAA,KAEA,OADAxV,KAAA+T,aAAAC,GAAA,IACA,GAGAxH,IAEA5M,EAAA,+BACA,wBACA,iBACA,SAAA6V,EAAAjJ,GACA,OAAAiJ,EAAAC,OAAA,gCAAAlJ,KAEA5M,EAAA,0BAAA,+BAAA,SAAA8S,GAAA,OAAAA","file":"../skylark-online3dviewer.js","sourcesContent":["define('skylark-online3dviewer/InfoTable',[\r\n\t\"skylark-jquery\"\r\n],function($){\r\n\tvar InfoTable = function (parent)\r\n\t{\r\n\t\tthis.table = $('<table>').addClass ('infotable').appendTo (parent);\r\n\t};\r\n\r\n\tInfoTable.prototype.AddRow = function (name, value)\r\n\t{\r\n\t\tvar tableRow = $('<tr>').appendTo (this.table);\r\n\t\t$('<td>').html (name).appendTo (tableRow);\r\n\t\t$('<td>').html (value).appendTo (tableRow);\r\n\t};\r\n\r\n\tInfoTable.prototype.AddColorRow = function (name, color)\r\n\t{\r\n\t\tvar tableRow = $('<tr>').appendTo (this.table);\r\n\t\t$('<td>').html (name).appendTo (tableRow);\r\n\r\n\t\tvar valueColumn = document.createElement ('td');\r\n\t\tvar valueColumn = $('<td>').appendTo (tableRow);\r\n\t\t\r\n\t\tvar colorDiv = $('<div>').addClass ('colorbutton').appendTo (valueColumn);\r\n\t\tcolorDiv.attr ('title', '(' + color[0] + ', ' + color[1] + ', ' + color[2] + ')');\r\n\t\tvar hexColor = JSM.RGBComponentsToHexColor (color[0] * 255.0, color[1] * 255.0, color[2] * 255.0);\r\n\t\tvar colorString = hexColor.toString (16);\r\n\t\twhile (colorString.length < 6) {\r\n\t\t\tcolorString = '0' + colorString;\r\n\t\t}\r\n\t\tcolorDiv.css ('background', '#' + colorString);\r\n\t};\r\n\r\n\treturn InfoTable;\t\r\n});\ndefine('skylark-online3dviewer/FloatingControl',[\r\n\t\"skylark-jquery\"\r\n],function($){\r\n\tvar FloatingControl = function ()\r\n\t{\r\n\t\tthis.parent = null;\r\n\t\tthis.controlDiv = null;\r\n\t\tthis.contentDiv = null;\r\n\t};\r\n\r\n\tFloatingControl.prototype.Open = function (parameters)\r\n\t{\r\n\t\tif (this.controlDiv !== null) {\r\n\t\t\tthis.Close ();\r\n\t\t}\r\n\t\tthis.parent = parameters.parent;\r\n\t\tthis.controlDiv = $('<div>').addClass ('control').appendTo ($('body'));\r\n\t\tthis.contentDiv = $('<div>').addClass ('controlcontent').html (parameters.text).appendTo (this.controlDiv);\t\r\n\t\tthis.Resize ();\r\n\t};\r\n\r\n\tFloatingControl.prototype.Close = function ()\r\n\t{\r\n\t\tif (this.controlDiv === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.controlDiv.remove ();\r\n\t\tthis.controlDiv = null;\r\n\t};\r\n\r\n\tFloatingControl.prototype.Resize = function ()\r\n\t{\r\n\t\tif (this.controlDiv === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.controlDiv.css ('left', (this.parent.offset ().left + (this.parent.width () - this.controlDiv.width ()) / 2.0) + 'px');\r\n\t\tthis.controlDiv.css ('top', (this.parent.offset ().top + (this.parent.height () - this.controlDiv.height ()) / 3.0) + 'px');\r\n\t};\r\n\r\n\treturn FloatingControl;\t\r\n});\ndefine('skylark-online3dviewer/FloatingDialog',[\r\n\t\"skylark-jquery\"\r\n],function($){\r\n\tvar FloatingDialog = function ()\r\n\t{\r\n\t\tthis.dialogDiv = null;\r\n\t\tthis.contentDiv = null;\r\n\t};\r\n\r\n\tFloatingDialog.prototype.Open = function (parameters)\r\n\t{\r\n\t\tfunction AddButton (dialog, parent, button)\r\n\t\t{\r\n\t\t\tvar buttonDiv = $('<div>').addClass ('dialogbutton').html (button.text).appendTo (parent);\r\n\t\t\tbuttonDiv.click (function () {\r\n\t\t\t\tbutton.callback (dialog);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.dialogDiv !== null) {\r\n\t\t\tthis.Close ();\r\n\t\t}\r\n\r\n\t\tthis.dialogDiv = $('<div>').addClass ('dialog').appendTo ($('body'));\r\n\t\t$('<div>').addClass ('dialogtitle').html (parameters.title).appendTo (this.dialogDiv);\r\n\t\tthis.contentDiv = $('<div>').addClass ('dialogcontent').appendTo (this.dialogDiv);\r\n\t\tif (parameters.text !== null && parameters.text !== undefined) {\r\n\t\t\tthis.contentDiv.html (parameters.text);\r\n\t\t}\r\n\t\tvar buttonsDiv = $('<div>').addClass ('dialogbuttons').appendTo (this.dialogDiv);\r\n\r\n\t\tvar i, button;\r\n\t\tfor (i = 0; i < parameters.buttons.length; i++) {\r\n\t\t\tbutton = parameters.buttons[i];\r\n\t\t\tAddButton (this, buttonsDiv, button);\r\n\t\t}\r\n\r\n\t\tdocument.addEventListener ('click', this.MouseClick.bind (this), true);\r\n\t\tthis.Resize ();\r\n\t};\r\n\r\n\tFloatingDialog.prototype.Close = function ()\r\n\t{\r\n\t\tif (this.dialogDiv === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.dialogDiv.remove ();\r\n\t\tthis.dialogDiv = null;\r\n\t\t$('body').unbind ('click');\r\n\t};\r\n\r\n\tFloatingDialog.prototype.GetContentDiv = function ()\r\n\t{\r\n\t\treturn this.contentDiv;\r\n\t};\r\n\r\n\tFloatingDialog.prototype.Resize = function ()\r\n\t{\r\n\t\tif (this.dialogDiv === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.dialogDiv.css ('left', ((document.body.clientWidth - this.dialogDiv.width ()) / 2.0) + 'px');\r\n\t\tthis.dialogDiv.css ('top', ((document.body.clientHeight - this.dialogDiv.height ()) / 3.0) + 'px');\r\n\t};\r\n\r\n\tFloatingDialog.prototype.MouseClick = function (clickEvent)\r\n\t{\r\n\t\tif (this.dialogDiv === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar dialogClicked = false;\r\n\t\tvar target = clickEvent.target;\r\n\t\twhile (target !== null) {\r\n\t\t\tif (target === this.dialogDiv.get ()[0]) {\r\n\t\t\t\tdialogClicked = true;\r\n\t\t\t}\r\n\t\t\ttarget = target.parentElement;\r\n\t\t}\r\n\t\t\r\n\t\tif (!dialogClicked) {\r\n\t\t\tthis.Close ();\r\n\t\t}\r\n\t};\r\n\r\n\treturn FloatingDialog;\r\n});\ndefine('skylark-online3dviewer/ExtensionInterface',[],function(){\r\n\tvar ExtensionInterface = function (app)\r\n\t{\r\n\t\tthis.app = app;\r\n\t};\r\n\r\n\tExtensionInterface.prototype.GetButtonsDiv = function ()\r\n\t{\r\n\t\treturn this.app.extensionButtons.GetButtonsDiv ();\r\n\t};\r\n\r\n\tExtensionInterface.prototype.GetModelJson = function ()\r\n\t{\r\n\t\treturn this.app.viewer.GetJsonData ();\r\n\t};\r\n\r\n\treturn ExtensionInterface;\t\r\n});\ndefine('skylark-online3dviewer/ExtensionButtons',[\r\n\t\"skylark-jquery\"\r\n],function($){\r\n\tvar ExtensionButtons = function (parent)\r\n\t{\r\n\t\tthis.buttonsDiv = $('<div>').attr ('id', 'extbuttons').appendTo (parent);\r\n\t};\r\n\r\n\tExtensionButtons.prototype.GetButtonsDiv = function ()\r\n\t{\r\n\t\treturn this.buttonsDiv;\r\n\t};\r\n\t\r\n\treturn ExtensionButtons;\t\r\n});\ndefine('skylark-online3dviewer/ImporterProgressBar',[\r\n\t\"skylark-jquery\"\r\n],function($){\r\n\tvar ImporterProgressBar = function (parent)\r\n\t{\r\n\t\tthis.parent = parent;\r\n\t\tthis.borderDiv = null;\r\n\t\tthis.contentDiv = null;\r\n\t\tthis.maxCount = null;\r\n\t\tthis.maxWidth = null;\r\n\t};\r\n\r\n\tImporterProgressBar.prototype.Init = function (maxCount)\r\n\t{\r\n\t\tthis.borderDiv = $('<div>').addClass ('progressbarborder').appendTo (this.parent);\r\n\t\tthis.contentDiv = $('<div>').addClass ('progressbarcontent').appendTo (this.borderDiv);\r\n\r\n\t\tthis.maxCount = maxCount;\r\n\t\tthis.maxWidth = this.borderDiv.width ();\r\n\t\tthis.Step (0);\r\n\t};\r\n\r\n\tImporterProgressBar.prototype.Step = function (count)\r\n\t{\r\n\t\tvar step = this.maxWidth / this.maxCount;\r\n\t\tvar width = count * step;\r\n\t\tif (count == this.maxCount) {\r\n\t\t\twidth = this.maxWidth;\r\n\t\t}\r\n\t\tthis.contentDiv.width (width);\r\n\t};\r\n\t\r\n\treturn ImporterProgressBar;\r\n});\ndefine('skylark-online3dviewer/ImporterButtons',[\r\n\t\"skylark-jquery\"\r\n],function($){\r\n\tvar ImporterButtons = function (parent)\r\n\t{\r\n\t\tthis.buttonsDiv = $('<div>').attr ('id', 'buttons').appendTo (parent);\r\n\t};\r\n\r\n\tImporterButtons.prototype.AddLogo = function (title)\r\n\t{\r\n\t\tvar logoDiv = $('<div>').attr ('id', 'logo').html (title).appendTo (this.buttonsDiv);\r\n\t\tlogoDiv.click (function () {\r\n\t\t\tlocation.hash = '';\r\n\t\t\tlocation.reload ();\r\n\t\t});\r\n\t};\r\n\r\n\tImporterButtons.prototype.AddButton = function (image, title, onClick)\r\n\t{\r\n\t\tvar buttonImage = $('<img>').addClass ('topbutton').attr ('src', image).attr ('title', title).appendTo (this.buttonsDiv);\r\n\t\tbuttonImage.click (function () {\r\n\t\t\tonClick ();\r\n\t\t});\r\n\t};\r\n\r\n\tImporterButtons.prototype.AddToggleButton = function (image, toggleImage, title, onClick)\r\n\t{\r\n\t\tvar buttonImage = $('<img>').addClass ('topbutton').attr ('src', image).attr ('title', title).appendTo (this.buttonsDiv);\r\n\t\tvar isOn = true;\r\n\t\tbuttonImage.click (function () {\r\n\t\t\tisOn = !isOn;\r\n\t\t\tif (isOn) {\r\n\t\t\t\tbuttonImage.attr ('src', image);\r\n\t\t\t} else {\r\n\t\t\t\tbuttonImage.attr ('src', toggleImage);\r\n\t\t\t}\r\n\t\t\tonClick ();\r\n\t\t});\r\n\t};\r\n\r\n\treturn ImporterButtons;\t\r\n});\ndefine('skylark-online3dviewer/ImporterMenu',[\r\n\t\"skylark-jquery\",\r\n\t\"./ImporterProgressBar\",\r\n\t\"./ImporterButtons\"\t\r\n],function($,ImporterProgressBar,ImporterButtons){\r\n\tfunction IsSet (val)\r\n\t{\r\n\t\treturn val !== undefined && val !== null;\r\n\t}\r\n\r\n\tvar ImporterMenuItem = function (parentDiv, name, parameters)\r\n\t{\r\n\t\tthis.parentDiv = parentDiv;\r\n\t\tthis.parameters = parameters;\r\n\r\n\t\tthis.menuItemDiv = null;\r\n\t\tthis.isOpen = null;\r\n\t\tthis.openCloseImage = null;\r\n\t\tthis.contentDiv = null;\r\n\r\n\t\tthis.Initialize (name);\r\n\t};\r\n\r\n\tImporterMenuItem.prototype.Initialize = function (name)\r\n\t{\r\n\t\tthis.menuItemDiv = $('<div>').addClass ('menuitem').appendTo (this.parentDiv);\r\n\t\tif (IsSet (this.parameters)) {\r\n\t\t\tif (IsSet (this.parameters.id)) {\r\n\t\t\t\tthis.menuItemDiv.attr ('id', this.parameters.id);\r\n\t\t\t}\r\n\t\t\tif (IsSet (this.parameters.openCloseButton)) {\r\n\t\t\t\tthis.AddOpenCloseButton ();\r\n\t\t\t}\r\n\t\t\tif (IsSet (this.parameters.userButtons)) {\r\n\t\t\t\tvar i, userButton;\r\n\t\t\t\tfor (i = 0; i < this.parameters.userButtons.length; i++) {\r\n\t\t\t\t\tuserButton = this.parameters.userButtons[i];\r\n\t\t\t\t\tthis.AddUserButton (userButton);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar menuItemTextDiv = $('<div>').addClass ('menuitem').html (name).attr ('title', name).appendTo (this.menuItemDiv);\r\n\t\tif (IsSet (this.parameters) && IsSet (this.parameters.openCloseButton)) {\r\n\t\t\tmenuItemTextDiv.css ('cursor', 'pointer');\r\n\t\t}\r\n\t};\r\n\r\n\tImporterMenuItem.prototype.AddSubItem = function (name, parameters)\r\n\t{\r\n\t\treturn new ImporterMenuItem (this.contentDiv, name, parameters);\r\n\t};\r\n\r\n\tImporterMenuItem.prototype.GetContentDiv = function ()\r\n\t{\r\n\t\treturn this.contentDiv;\r\n\t};\r\n\r\n\tImporterMenuItem.prototype.AddOpenCloseButton = function ()\r\n\t{\r\n\t\tvar myThis = this;\r\n\t\tthis.isOpen = false;\r\n\t\tthis.contentDiv = $('<div>').addClass ('menuitemcontent').hide ().appendTo (this.parentDiv);\r\n\t\tthis.openCloseImage = $('<img>').addClass ('menubutton').attr ('title', this.parameters.openCloseButton.title).appendTo (this.menuItemDiv);\r\n\t\tthis.openCloseImage.attr ('src', 'images/closed.png');\r\n\t\tthis.menuItemDiv.click (function () {\r\n\t\t\tmyThis.SetOpen (!myThis.isOpen);\r\n\t\t});\r\n\t};\r\n\r\n\tImporterMenuItem.prototype.AddUserButton = function (userButton)\r\n\t{\r\n\t\tvar userImage = $('<img>').addClass ('menubutton').attr ('title', userButton.title).appendTo (this.menuItemDiv);\r\n\t\tif (IsSet (userButton.id)) {\r\n\t\t\tuserImage.attr ('id', userButton.id);\r\n\t\t}\r\n\t\tif (IsSet (userButton.onCreate)) {\r\n\t\t\tuserButton.onCreate (userImage, userButton.userData);\r\n\t\t}\r\n\t\tif (IsSet (userButton.onClick) || IsSet (userButton.onCtrlClick)) {\r\n\t\t\tuserImage.click (function (event) {\r\n\t\t\t\tevent.stopPropagation ();\r\n\t\t\t\tif (event.ctrlKey && IsSet (userButton.onCtrlClick)) {\r\n\t\t\t\t\tuserButton.onCtrlClick (userImage, userButton.userData);\r\n\t\t\t\t} else if (IsSet (userButton.onClick)) {\r\n\t\t\t\t\tuserButton.onClick (userImage, userButton.userData);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tImporterMenuItem.prototype.SetOpen = function (isOpen)\r\n\t{\r\n\t\tthis.isOpen = isOpen;\r\n\t\tif (this.isOpen) {\r\n\t\t\tif (IsSet (this.parameters.openCloseButton.onOpen)) {\r\n\t\t\t\tthis.parameters.openCloseButton.onOpen (this.contentDiv, this.parameters.openCloseButton.userData);\r\n\t\t\t}\r\n\t\t\tthis.contentDiv.show ();\r\n\t\t\tthis.openCloseImage.attr ('src', 'images/opened.png');\r\n\t\t} else {\r\n\t\t\tif (IsSet (this.parameters.openCloseButton.onClose)) {\r\n\t\t\t\tthis.parameters.openCloseButton.onClose (this.contentDiv, this.parameters.openCloseButton.userData);\r\n\t\t\t}\r\n\t\t\tthis.contentDiv.hide ();\r\n\t\t\tthis.openCloseImage.attr ('src', 'images/closed.png');\r\n\t\t}\r\n\t};\r\n\r\n\tImporterMenuItem.prototype.Highlight = function (highlight)\r\n\t{\r\n\t\tif (highlight) {\r\n\t\t\tthis.menuItemDiv.addClass ('highlighted');\r\n\t\t} else {\r\n\t\t\tthis.menuItemDiv.removeClass ('highlighted');\r\n\t\t}\r\n\t};\r\n\r\n\tImporterMenuItem.prototype.IsHighlighted = function ()\r\n\t{\r\n\t\treturn this.menuItemDiv.hasClass ('highlighted');\r\n\t};\r\n\r\n\tvar ImporterMenu = function (parentDiv)\r\n\t{\r\n\t\tthis.parentDiv = parentDiv;\r\n\t\tthis.parentDiv.empty ();\r\n\t};\r\n\r\n\tImporterMenu.prototype.AddGroup = function (name, parameters)\r\n\t{\r\n\t\treturn new ImporterMenuItem (this.parentDiv, name, parameters);\r\n\t};\r\n\r\n\r\n\treturn ImporterMenu;\r\n});\r\n\ndefine('skylark-online3dviewer/ImporterViewer',[\r\n\t\"skylark-threejs\",\r\n\t\"skylark-jsmodeler\"\r\n],function(THREE,JSM){\r\n\tJSM.THREE = THREE;\r\n\t\r\n\tvar ImporterViewer = function ()\r\n\t{\r\n\t\tthis.viewer = null;\r\n\t\tthis.jsonData = null;\r\n\t};\r\n\r\n\tImporterViewer.prototype.Init = function (canvasName)\r\n\t{\r\n\t\tvar viewerSettings = {\r\n\t\t\tcameraEyePosition : [8.0, -6.0, 4.0],\r\n\t\t\tcameraCenterPosition : [0.0, 0.0, 0.0],\r\n\t\t\tcameraUpVector : [0, 0, 1]\r\n\t\t};\r\n\r\n\t\tthis.viewer = new JSM.ThreeViewer ();\r\n\t\tvar canvas = document.getElementById (canvasName);\r\n\t\tif (!this.viewer.Start (canvas, viewerSettings)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.viewer.navigation.SetNearDistanceLimit (0.1);\r\n\t\tthis.viewer.navigation.SetFarDistanceLimit (100000.0);\r\n\t\tthis.viewer.SetClearColor (0xdddddd);\r\n\t\tthis.viewer.Draw ();\r\n\t\t\r\n\t\treturn true;\r\n\t};\r\n\r\n\tImporterViewer.prototype.GetJsonData = function ()\r\n\t{\r\n\t\treturn this.jsonData;\r\n\t};\r\n\r\n\tImporterViewer.prototype.SetJsonData = function (jsonData)\r\n\t{\r\n\t\tthis.jsonData = jsonData;\r\n\t};\r\n\r\n\tImporterViewer.prototype.RemoveMeshes = function ()\r\n\t{\r\n\t\tthis.viewer.RemoveMeshes ();\r\n\t};\r\n\r\n\tImporterViewer.prototype.ShowAllMeshes = function (inEnvironment)\r\n\t{\r\n\t\tthis.RemoveMeshes ();\r\n\t\t\r\n\t\tvar myThis = this;\r\n\t\tvar currentMeshIndex = 0;\r\n\t\tvar environment = {\r\n\t\t\tonStart : function (taskCount/*, meshes*/) {\r\n\t\t\t\tinEnvironment.onStart (taskCount);\r\n\t\t\t\tmyThis.viewer.EnableDraw (false);\r\n\t\t\t},\r\n\t\t\tonProgress : function (currentTask, meshes) {\r\n\t\t\t\twhile (currentMeshIndex < meshes.length) {\r\n\t\t\t\t\tmyThis.viewer.AddMesh (meshes[currentMeshIndex]);\r\n\t\t\t\t\tcurrentMeshIndex = currentMeshIndex + 1;\r\n\t\t\t\t}\r\n\t\t\t\tinEnvironment.onProgress (currentTask);\r\n\t\t\t},\r\n\t\t\tonFinish : function (meshes) {\r\n\t\t\t\tmyThis.AdjustClippingPlanes (50.0);\r\n\t\t\t\tmyThis.FitInWindow ();\r\n\t\t\t\tmyThis.viewer.EnableDraw (true);\r\n\t\t\t\tmyThis.viewer.Draw ();\r\n\t\t\t\tinEnvironment.onFinish (meshes);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tJSM.ConvertJSONDataToThreeMeshes (this.jsonData, this.Draw.bind (this), environment);\r\n\t};\r\n\r\n\tImporterViewer.prototype.GetMeshesUnderPosition = function (x, y)\r\n\t{\r\n\t\tvar objects = this.viewer.GetObjectsUnderPosition (x, y);\r\n\t\tvar meshes = [];\r\n\t\tvar i;\r\n\t\tfor (i = 0; i < objects.length; i++) {\r\n\t\t\tif (objects[i].object instanceof THREE.Mesh) {\r\n\t\t\t\tmeshes.push (objects[i].object);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn meshes;\r\n\t};\r\n\r\n\tImporterViewer.prototype.ShowMesh = function (index, show)\r\n\t{\r\n\t\tthis.viewer.scene.traverse (function (current) {\r\n\t\t\tif (current instanceof THREE.Mesh) {\r\n\t\t\t\tif (current.originalJsonMeshIndex == index) {\r\n\t\t\t\t\tif (show) {\r\n\t\t\t\t\t\tcurrent.visible = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcurrent.visible = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tImporterViewer.prototype.GetMeshesByMaterial = function (materialIndex)\r\n\t{\r\n\t\tvar meshIndices = [];\r\n\t\tthis.viewer.scene.traverse (function (current) {\r\n\t\t\tif (current instanceof THREE.Mesh) {\r\n\t\t\t\tif (current.originalJsonMaterialIndex == materialIndex) {\r\n\t\t\t\t\tif (meshIndices.length === 0 || meshIndices[meshIndices.length - 1] != current.originalJsonMeshIndex) {\r\n\t\t\t\t\t\tmeshIndices.push (current.originalJsonMeshIndex);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn meshIndices;\r\n\t};\r\n\r\n\tImporterViewer.prototype.HighlightMesh = function (index, highlight)\r\n\t{\r\n\t\tthis.viewer.scene.traverse (function (current) {\r\n\t\t\tif (current instanceof THREE.Mesh) {\r\n\t\t\t\tif (current.originalJsonMeshIndex == index) {\r\n\t\t\t\t\tif (highlight) {\r\n\t\t\t\t\t\tcurrent.material.emissive.setHex (0x555555);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcurrent.material.emissive.setHex (0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tImporterViewer.prototype.FitInWindow = function ()\r\n\t{\r\n\t\tthis.viewer.FitInWindow ();\r\n\t};\r\n\r\n\tImporterViewer.prototype.FitMeshInWindow = function (index)\r\n\t{\r\n\t\tvar meshes = [];\r\n\t\tthis.viewer.scene.traverse (function (current) {\r\n\t\t\tif (current instanceof THREE.Mesh) {\r\n\t\t\t\tif (current.originalJsonMeshIndex == index) {\r\n\t\t\t\t\tmeshes.push (current);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.viewer.FitMeshesInWindow (meshes);\r\n\t};\r\n\r\n\tImporterViewer.prototype.FitMeshesInWindow = function (meshIndices)\r\n\t{\r\n\t\tvar meshes = [];\r\n\t\tthis.viewer.scene.traverse (function (current) {\r\n\t\t\tif (current instanceof THREE.Mesh) {\r\n\t\t\t\tif (meshIndices.indexOf (current.originalJsonMeshIndex) != -1) {\r\n\t\t\t\t\tmeshes.push (current);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.viewer.FitMeshesInWindow (meshes);\r\n\t};\r\n\r\n\tImporterViewer.prototype.AdjustClippingPlanes = function ()\r\n\t{\r\n\t\tif (this.viewer.MeshCount () > 0) {\r\n\t\t\tthis.viewer.AdjustClippingPlanes (50.0);\r\n\t\t}\r\n\t};\r\n\r\n\tImporterViewer.prototype.SetFixUp = function ()\r\n\t{\r\n\t\tthis.viewer.navigation.EnableFixUp (!this.viewer.navigation.cameraFixUp);\r\n\t};\r\n\r\n\tImporterViewer.prototype.SetNamedView = function (viewName)\r\n\t{\r\n\t\tvar eye, center, up;\r\n\t\tif (viewName == 'z') {\r\n\t\t\teye = new JSM.Coord (1.0, 0.0, 0.0);\r\n\t\t\tcenter = new JSM.Coord (0.0, 0.0, 0.0);\r\n\t\t\tup = new JSM.Coord (0.0, 0.0, 1.0);\r\n\t\t} else if (viewName == '-z') {\r\n\t\t\teye = new JSM.Coord (-1.0, 0.0, 0.0);\r\n\t\t\tcenter = new JSM.Coord (0.0, 0.0, 0.0);\r\n\t\t\tup = new JSM.Coord (0.0, 0.0, -1.0);\r\n\t\t} else if (viewName == 'y') {\r\n\t\t\teye = new JSM.Coord (1.0, 0.0, 0.0);\r\n\t\t\tcenter = new JSM.Coord (0.0, 0.0, 0.0);\r\n\t\t\tup = new JSM.Coord (0.0, 1.0, 0.0);\r\n\t\t} else if (viewName == '-y') {\r\n\t\t\teye = new JSM.Coord (-1.0, 0.0, 0.0);\r\n\t\t\tcenter = new JSM.Coord (0.0, 0.0, 0.0);\r\n\t\t\tup = new JSM.Coord (0.0, -1.0, 0.0);\r\n\t\t} else if (viewName == 'x') {\r\n\t\t\teye = new JSM.Coord (0.0, 1.0, 0.0);\r\n\t\t\tcenter = new JSM.Coord (0.0, 0.0, 0.0);\r\n\t\t\tup = new JSM.Coord (1.0, 0.0, 0.0);\r\n\t\t} else if (viewName == '-x') {\r\n\t\t\teye = new JSM.Coord (0.0, -1.0, 0.0);\r\n\t\t\tcenter = new JSM.Coord (0.0, 0.0, 0.0);\r\n\t\t\tup = new JSM.Coord (-1.0, 0.0, 0.0);\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.viewer.cameraMove.Set (eye, center, up);\r\n\t\tthis.viewer.FitInWindow ();\r\n\t};\r\n\r\n\tImporterViewer.prototype.Draw = function ()\r\n\t{\r\n\t\tthis.viewer.Draw ();\r\n\t};\r\n\r\n\treturn ImporterViewer;\r\n});\r\n\ndefine('skylark-online3dviewer/ImporterApp',[\r\n\t\"skylark-jquery\",\r\n\t\"skylark-jsmodeler\",\r\n\t\"./InfoTable\",\r\n\t\"./FloatingControl\",\r\n\t\"./FloatingDialog\",\r\n\t\"./ExtensionInterface\",\r\n\t\"./ExtensionButtons\",\r\n\t\"./ImporterProgressBar\",\r\n\t\"./ImporterButtons\",\r\n\t\"./ImporterMenu\",\r\n\t\"./ImporterViewer\"\r\n],function($,JSM,InfoTable,FloatingControl,FloatingDialog,ExtensionInterface,ExtensionButtons, ImporterProgressBar,ImporterButtons, ImporterMenu,ImporterViewer){\r\n\tvar ImporterApp = function ()\r\n\t{\r\n\t\tthis.canvas = null;\r\n\t\tthis.viewer = null;\r\n\t\tthis.fileNames = null;\r\n\t\tthis.inGenerate = false;\r\n\t\tthis.meshesGroup = null;\r\n\t\tthis.materialMenuItems = null;\r\n\t\tthis.meshMenuItems = null;\r\n\t\tthis.extensions = [];\r\n\t\tthis.importerButtons = null;\r\n\t\tthis.extensionButtons = null;\r\n\t\tthis.introControl = null;\r\n\t\tthis.floatingDialog = null;\r\n\t\tthis.isMobile = null;\r\n\t\tthis.readyForTest = null;\r\n\t};\r\n\r\n\tImporterApp.prototype.Init = function ()\r\n\t{\r\n\t\tif (!JSM.IsWebGLEnabled () || !JSM.IsFileApiEnabled ()) {\r\n\t\t\twhile (document.body.lastChild) {\r\n\t\t\t\tdocument.body.removeChild (document.body.lastChild);\r\n\t\t\t}\r\n\r\n\t\t\tvar div = $('<div>').addClass ('nosupport').appendTo ($('body'));\r\n\t\t\tdiv.html ([\r\n\t\t\t\t'<div id=\"nosupport\">',\r\n\t\t\t\tthis.GetWelcomeText (),\r\n\t\t\t\t'<div class=\"nosupporterror\">You need a browser which supports the following technologies: WebGL, WebGLRenderingContext, File, FileReader, FileList, Blob, URL.</div>',\r\n\t\t\t\t'</div>'\r\n\t\t\t].join (''));\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar myThis = this;\r\n\t\tvar top = $('#top');\r\n\t\tthis.importerButtons = new ImporterButtons (top);\r\n\t\tthis.importerButtons.AddLogo ('Online 3D Viewer <span class=\"version\">v 0.6.6</span>');\r\n\t\tthis.importerButtons.AddButton ('images/openfile.png', 'Open File', function () { myThis.OpenFile (); });\r\n\t\tthis.importerButtons.AddButton ('images/fitinwindow.png', 'Fit In Window', function () { myThis.FitInWindow (); });\r\n\t\tthis.importerButtons.AddToggleButton ('images/fixup.png', 'images/fixupgray.png', 'Enable/Disable Fixed Up Vector', function () { myThis.SetFixUp (); });\r\n\t\tthis.importerButtons.AddButton ('images/top.png', 'Set Up Vector (Z)', function () { myThis.SetNamedView ('z'); });\r\n\t\tthis.importerButtons.AddButton ('images/bottom.png', 'Set Up Vector (-Z)', function () { myThis.SetNamedView ('-z'); });\r\n\t\tthis.importerButtons.AddButton ('images/front.png', 'Set Up Vector (Y)', function () { myThis.SetNamedView ('y'); });\r\n\t\tthis.importerButtons.AddButton ('images/back.png', 'Set Up Vector (-Y)', function () { myThis.SetNamedView ('-y'); });\r\n\t\tthis.importerButtons.AddButton ('images/left.png', 'Set Up Vector (X)', function () { myThis.SetNamedView ('x'); });\r\n\t\tthis.importerButtons.AddButton ('images/right.png', 'Set Up Vector (-X)', function () { myThis.SetNamedView ('-x'); });\r\n\t\t\r\n\t\tthis.extensionButtons = new ExtensionButtons (top);\r\n\t\tthis.introControl = new FloatingControl ();\r\n\t\tthis.floatingDialog = new FloatingDialog ();\r\n\t\t\r\n\t\tvar match = window.matchMedia ('(max-device-width : 600px)');\r\n\t\tthis.isMobile = match.matches;\r\n\r\n\t\twindow.addEventListener ('resize', this.Resize.bind (this), false);\r\n\t\tthis.Resize ();\r\n\r\n\t\tvar canvasName = 'modelcanvas';\r\n\t\tthis.canvas = $('#' + canvasName);\r\n\t\tthis.RegisterCanvasClick ();\r\n\t\tthis.viewer = new ImporterViewer ();\r\n\t\tthis.viewer.Init (canvasName);\r\n\r\n\t\twindow.addEventListener ('dragover', this.DragOver.bind (this), false);\r\n\t\twindow.addEventListener ('drop', this.Drop.bind (this), false);\r\n\t\t\r\n\t\tvar fileInput = document.getElementById ('file');\r\n\t\tfileInput.addEventListener ('change', this.FileSelected.bind (this), false);\r\n\t\t\r\n\t\twindow.onhashchange = this.LoadFilesFromHash.bind (this);\r\n\t\tvar hasHashModel = this.LoadFilesFromHash ();\r\n\t\tif (!hasHashModel && !this.isMobile) {\r\n\t\t\tthis.ShowIntroControl ();\r\n\t\t}\r\n\t};\r\n\r\n\tImporterApp.prototype.ClearReadyForTest = function ()\r\n\t{\r\n\t\tif (this.readyForTest !== null) {\r\n\t\t\tthis.readyForTest.remove ();\r\n\t\t\tthis.readyForTest = null;\r\n\t\t}\r\n\t};\r\n\r\n\tImporterApp.prototype.SetReadyForTest = function ()\r\n\t{\r\n\t\tthis.readyForTest = $('<div>').attr ('id', 'readyfortest').hide ().appendTo ($('body'));\r\n\t};\r\n\r\n\tImporterApp.prototype.AddExtension = function (extension)\r\n\t{\r\n\t\tif (!extension.IsEnabled ()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar extInterface = new ExtensionInterface (this);\r\n\t\textension.Init (extInterface);\r\n\t};\r\n\r\n\tImporterApp.prototype.ShowIntroControl = function ()\r\n\t{\r\n\t\tvar dialogText = [\r\n\t\t\t'<div class=\"importerdialog\">',\r\n\t\t\tthis.GetWelcomeText (),\r\n\t\t\t'</div>',\r\n\t\t].join ('');\r\n\t\tthis.introControl.Open ({\r\n\t\t\tparent : this.canvas,\r\n\t\t\ttext : dialogText\r\n\t\t});\r\n\t\tthis.Resize ();\r\n\t};\r\n\r\n\tImporterApp.prototype.HideIntroControl = function ()\r\n\t{\r\n\t\tthis.introControl.Close ();\r\n\t\tthis.Resize ();\r\n\t};\r\n\r\n\tImporterApp.prototype.GetWelcomeText = function ()\r\n\t{\r\n\t\tvar welcomeText = [\r\n\t\t\t'<div class=\"welcometitle\">Welcome to Online 3D Viewer!</div>',\r\n\t\t\t'<div class=\"welcometext\">Here you can view your local 3D models online. You have three ways to open a file. Use the open button above to select files, simply drag and drop files to this browser window, or define the url of the files as location hash.</div>',\r\n\t\t\t'<div class=\"welcometextformats\">Supported formats: 3ds, obj, stl, off.</div>',\r\n\t\t\t'<div class=\"welcometext\">Powered by <a target=\"_blank\" href=\"https://github.com/mrdoob/three.js/\">Three.js</a> and <a target=\"_blank\" href=\"https://github.com/kovacsv/JSModeler\">JSModeler</a>.</div>',\r\n\t\t\t'<div class=\"welcometext\"><a target=\"_blank\" href=\"https://github.com/kovacsv/Online3DViewer\"><img src=\"images/githublogo.png\"/></a></div>',\r\n\t\t].join ('');\r\n\t\treturn welcomeText;\r\n\t};\r\n\r\n\tImporterApp.prototype.Resize = function ()\r\n\t{\r\n\t\tfunction SetWidth (elem, value)\r\n\t\t{\r\n\t\t\telem.width = value;\r\n\t\t\telem.style.width = value + 'px';\r\n\t\t}\r\n\r\n\t\tfunction SetHeight (elem, value)\r\n\t\t{\r\n\t\t\telem.height = value;\r\n\t\t\telem.style.height = value + 'px';\r\n\t\t}\r\n\r\n\t\tvar top = document.getElementById ('top');\r\n\t\tvar left = document.getElementById ('left');\r\n\t\tvar canvas = document.getElementById ('modelcanvas');\r\n\t\tvar height = document.body.clientHeight - top.offsetHeight;\r\n\r\n\t\tSetHeight (left, height);\r\n\t\tSetHeight (canvas, height);\r\n\t\tSetWidth (canvas, document.body.clientWidth - left.offsetWidth);\r\n\t\t\r\n\t\tthis.introControl.Resize ();\r\n\t\tthis.floatingDialog.Resize ();\r\n\t};\r\n\r\n\tImporterApp.prototype.JsonLoaded = function (progressBar)\r\n\t{\r\n\t\tthis.Generate (progressBar);\r\n\t};\r\n\r\n\tImporterApp.prototype.GenerateMenu = function ()\r\n\t{\r\n\t\tfunction AddDefaultGroup (menu, name, id)\r\n\t\t{\r\n\t\t\tvar group = menu.AddGroup (name, {\r\n\t\t\t\tid : id,\r\n\t\t\t\topenCloseButton : {\r\n\t\t\t\t\ttitle : 'Show/Hide ' + name\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn group;\r\n\t\t}\r\n\r\n\t\tfunction AddInformation (infoGroup, jsonData)\r\n\t\t{\r\n\t\t\tvar infoTable = new InfoTable (infoGroup.GetContentDiv ());\r\n\r\n\t\t\tvar materialCount = jsonData.materials.length;\r\n\t\t\tvar vertexCount = 0;\r\n\t\t\tvar triangleCount = 0;\r\n\t\t\t\r\n\t\t\tvar i, j, mesh, triangles;\r\n\t\t\tfor (i = 0; i < jsonData.meshes.length; i++) {\r\n\t\t\t\tmesh = jsonData.meshes[i];\r\n\t\t\t\tvertexCount += mesh.vertices.length / 3;\r\n\t\t\t\tfor (j = 0; j < mesh.triangles.length; j++) {\r\n\t\t\t\t\ttriangles = mesh.triangles[j];\r\n\t\t\t\t\ttriangleCount += triangles.parameters.length / 9;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\tinfoTable.AddRow ('Material count', materialCount);\t\r\n\t\t\tinfoTable.AddRow ('Vertex count', vertexCount);\t\r\n\t\t\tinfoTable.AddRow ('Triangle count', triangleCount);\t\r\n\t\t}\r\n\t\t\r\n\t\tfunction AddMaterial (importerApp, importerMenu, materialsGroup, materialIndex, material)\r\n\t\t{\r\n\t\t\tvar materialMenuItem = materialsGroup.AddSubItem (material.name, {\r\n\t\t\t\topenCloseButton : {\r\n\t\t\t\t\ttitle : 'Show/Hide Information',\r\n\t\t\t\t\tonOpen : function (contentDiv, material) {\r\n\t\t\t\t\t\tcontentDiv.empty ();\r\n\t\t\t\t\t\tvar materialButtons = $('<div>').addClass ('submenubuttons').appendTo (contentDiv);\r\n\t\t\t\t\t\tvar highlightButton = $('<img>').addClass ('submenubutton').attr ('src', 'images/highlightmesh.png').attr ('title', 'Highlight Meshes By Material').appendTo (materialButtons);\r\n\t\t\t\t\t\thighlightButton.click (function () {\r\n\t\t\t\t\t\t\timporterApp.HighlightMeshesByMaterial (materialIndex);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tvar fitInWindowButton = $('<img>').addClass ('submenubutton').attr ('src', 'images/fitinwindowsmall.png').attr ('title', 'Fit Meshes In Window By Material').appendTo (materialButtons);\r\n\t\t\t\t\t\tfitInWindowButton.click (function () {\r\n\t\t\t\t\t\t\timporterApp.FitMeshesByMaterialInWindow (materialIndex);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tvar table = new InfoTable (contentDiv);\r\n\t\t\t\t\t\ttable.AddColorRow ('Ambient', material.ambient);\r\n\t\t\t\t\t\ttable.AddColorRow ('Diffuse', material.diffuse);\r\n\t\t\t\t\t\ttable.AddColorRow ('Specular', material.specular);\r\n\t\t\t\t\t\ttable.AddRow ('Shininess', material.shininess.toFixed (2));\r\n\t\t\t\t\t\ttable.AddRow ('Opacity', material.opacity.toFixed (2));\r\n\t\t\t\t\t},\r\n\t\t\t\t\tuserData : material\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn materialMenuItem;\r\n\t\t}\r\n\r\n\t\tfunction AddMesh (importerApp, importerMenu, meshesGroup, mesh, meshIndex)\r\n\t\t{\r\n\t\t\tfunction AddMeshButtons (importerApp, contentDiv, meshName, meshIndex)\r\n\t\t\t{\r\n\t\t\t\tfunction CopyToClipboard (text) {\r\n\t\t\t\t\tvar input = document.createElement ('input');\r\n\t\t\t\t\tinput.style.position = 'absolute';\r\n\t\t\t\t\tinput.style.left = '0';\r\n\t\t\t\t\tinput.style.top = '0';\r\n\t\t\t\t\tinput.setAttribute ('value', text);\r\n\t\t\t\t\tdocument.body.appendChild (input);\r\n\t\t\t\t\tinput.select ();\r\n\t\t\t\t\tdocument.execCommand ('copy');\r\n\t\t\t\t\tdocument.body.removeChild(input);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar meshButtons = $('<div>').addClass ('submenubuttons').appendTo (contentDiv);\r\n\t\t\t\tvar fitInWindowButton = $('<img>').addClass ('submenubutton').attr ('src', 'images/fitinwindowsmall.png').attr ('title', 'Fit Mesh In Window').appendTo (meshButtons);\r\n\t\t\t\tfitInWindowButton.click (function () {\r\n\t\t\t\t\timporterApp.FitMeshInWindow (meshIndex);\r\n\t\t\t\t});\r\n\t\t\t\tvar highlightButton = $('<img>').addClass ('submenubutton').attr ('src', 'images/highlightmesh.png').attr ('title', 'Highlight Mesh').appendTo (meshButtons);\r\n\t\t\t\thighlightButton.click (function () {\r\n\t\t\t\t\timporterApp.HighlightMesh (meshIndex);\r\n\t\t\t\t});\r\n\t\t\t\tvar copyNameToClipboardButton = $('<img>').addClass ('submenubutton').attr ('src', 'images/copytoclipboard.png').attr ('title', 'Copy Mesh Name To Clipboard').appendTo (meshButtons);\r\n\t\t\t\tcopyNameToClipboardButton.click (function () {\r\n\t\t\t\t\tCopyToClipboard (meshName);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar visibleImage = null;\r\n\t\t\tvar meshMenuItem = meshesGroup.AddSubItem (mesh.name, {\r\n\t\t\t\tid : 'meshmenuitem-' + meshIndex.toString (),\r\n\t\t\t\topenCloseButton : {\r\n\t\t\t\t\ttitle : 'Show/Hide Details',\r\n\t\t\t\t\tonOpen : function (contentDiv, mesh) {\r\n\t\t\t\t\t\tcontentDiv.empty ();\r\n\r\n\t\t\t\t\t\tAddMeshButtons (importerApp, contentDiv, mesh.name, meshIndex);\r\n\t\t\t\t\t\tvar table = new InfoTable (contentDiv);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar min = new JSM.Coord (JSM.Inf, JSM.Inf, JSM.Inf);\r\n\t\t\t\t\t\tvar max = new JSM.Coord (-JSM.Inf, -JSM.Inf, -JSM.Inf);\r\n\t\t\t\t\t\tvar i, vertex;\r\n\t\t\t\t\t\tfor (i = 0; i < mesh.vertices.length; i =  i + 3) {\r\n\t\t\t\t\t\t\tvertex = new JSM.Coord (mesh.vertices[i], mesh.vertices[i + 1], mesh.vertices[i + 2]);\r\n\t\t\t\t\t\t\tmin.x = JSM.Minimum (min.x, vertex.x);\r\n\t\t\t\t\t\t\tmin.y = JSM.Minimum (min.y, vertex.y);\r\n\t\t\t\t\t\t\tmin.z = JSM.Minimum (min.z, vertex.z);\r\n\t\t\t\t\t\t\tmax.x = JSM.Maximum (max.x, vertex.x);\r\n\t\t\t\t\t\t\tmax.y = JSM.Maximum (max.y, vertex.y);\r\n\t\t\t\t\t\t\tmax.z = JSM.Maximum (max.z, vertex.z);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttable.AddRow ('X Size', (max.x - min.x).toFixed (2));\r\n\t\t\t\t\t\ttable.AddRow ('Y Size', (max.y - min.y).toFixed (2));\r\n\t\t\t\t\t\ttable.AddRow ('Z Size', (max.z - min.z).toFixed (2));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar triangleCount = 0;\r\n\t\t\t\t\t\tvar triangles;\r\n\t\t\t\t\t\tfor (i = 0; i < mesh.triangles.length; i++) {\r\n\t\t\t\t\t\t\ttriangles = mesh.triangles[i];\r\n\t\t\t\t\t\t\ttriangleCount += triangles.parameters.length / 9;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\ttable.AddRow ('Vertex count', mesh.vertices.length / 3);\r\n\t\t\t\t\t\ttable.AddRow ('Triangle count', triangleCount);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tuserData : mesh\r\n\t\t\t\t},\r\n\t\t\t\tuserButtons : [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid : 'showhidemesh-' + meshIndex,\r\n\t\t\t\t\t\ttitle : 'Show/Hide Mesh',\r\n\t\t\t\t\t\tonCreate : function (image) {\r\n\t\t\t\t\t\t\timage.attr ('src', 'images/visible.png');\r\n\t\t\t\t\t\t\tvisibleImage = image;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tonClick : function (image, meshIndex) {\r\n\t\t\t\t\t\t\timporterApp.ShowHideMesh (meshIndex);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tonCtrlClick : function (image, meshIndex) {\r\n\t\t\t\t\t\t\timporterApp.IsolateMesh (meshIndex);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tuserData : meshIndex\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tmeshMenuItem.isVisible = true;\r\n\t\t\tmeshMenuItem.visibleImage = visibleImage;\r\n\t\t\treturn meshMenuItem;\r\n\t\t}\t\t\r\n\t\t\r\n\t\tvar jsonData = this.viewer.GetJsonData ();\r\n\t\tvar menu = $('#menu');\r\n\t\tvar importerMenu = new ImporterMenu (menu);\r\n\r\n\t\tvar filesGroup = AddDefaultGroup (importerMenu, 'Files', 'filesmenuitem');\r\n\t\tfilesGroup.AddSubItem (this.fileNames.main);\r\n\t\tvar i;\r\n\t\tfor (i = 0; i < this.fileNames.requested.length; i++) {\r\n\t\t\tfilesGroup.AddSubItem (this.fileNames.requested[i]);\r\n\t\t}\r\n\t\t\r\n\t\tif (this.fileNames.missing.length > 0) {\r\n\t\t\tvar missingFilesGroup = AddDefaultGroup (importerMenu, 'Missing Files', 'missingfilesmenuitem');\r\n\t\t\tfor (i = 0; i < this.fileNames.missing.length; i++) {\r\n\t\t\t\tmissingFilesGroup.AddSubItem (this.fileNames.missing[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar infoGroup = AddDefaultGroup (importerMenu, 'Information', 'informationmenuitem');\r\n\t\tAddInformation (infoGroup, jsonData);\r\n\t\t\r\n\t\tthis.materialMenuItems = [];\r\n\t\tvar materialsGroup = AddDefaultGroup (importerMenu, 'Materials', 'materialsmenuitem');\r\n\t\tvar material, materialMenuItem;\r\n\t\tfor (i = 0; i < jsonData.materials.length; i++) {\r\n\t\t\tmaterial = jsonData.materials[i];\r\n\t\t\tmaterialMenuItem = AddMaterial (this, importerMenu, materialsGroup, i, material);\r\n\t\t\tthis.materialMenuItems.push (materialMenuItem);\r\n\t\t}\r\n\t\t\r\n\t\tthis.meshesGroup = AddDefaultGroup (importerMenu, 'Meshes', 'meshesmenuitem');\r\n\t\tthis.meshMenuItems = [];\r\n\t\tvar mesh, meshMenuItem;\r\n\t\tfor (i = 0; i < jsonData.meshes.length; i++) {\r\n\t\t\tmesh = jsonData.meshes[i];\r\n\t\t\tmeshMenuItem = AddMesh (this, importerMenu, this.meshesGroup, mesh, i);\r\n\t\t\tthis.meshMenuItems.push (meshMenuItem);\r\n\t\t}\r\n\t\t\r\n\t\tthis.Resize ();\r\n\t};\r\n\r\n\tImporterApp.prototype.GenerateError = function (errorMessage)\r\n\t{\r\n\t\tthis.viewer.RemoveMeshes ();\r\n\t\tvar menu = $('#menu');\r\n\t\tmenu.empty ();\r\n\t\t\r\n\t\tthis.floatingDialog.Open ({\r\n\t\t\ttitle : 'Error',\r\n\t\t\ttext : '<div class=\"importerdialog\">' + errorMessage + '</div>',\r\n\t\t\tbuttons : [\r\n\t\t\t\t{\r\n\t\t\t\t\ttext : 'ok',\r\n\t\t\t\t\tcallback : function (dialog) {\r\n\t\t\t\t\t\tdialog.Close ();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t});\t\r\n\t};\r\n\r\n\tImporterApp.prototype.Generate = function (progressBar)\r\n\t{\r\n\t\tfunction ShowMeshes (importerApp, progressBar, merge)\r\n\t\t{\r\n\t\t\timporterApp.inGenerate = true;\r\n\t\t\tvar environment = {\r\n\t\t\t\tonStart : function (taskCount) {\r\n\t\t\t\t\tprogressBar.Init (taskCount);\r\n\t\t\t\t},\r\n\t\t\t\tonProgress : function (currentTask) {\r\n\t\t\t\t\tprogressBar.Step (currentTask + 1);\r\n\t\t\t\t},\r\n\t\t\t\tonFinish : function () {\r\n\t\t\t\t\timporterApp.GenerateMenu ();\r\n\t\t\t\t\timporterApp.inGenerate = false;\r\n\t\t\t\t\timporterApp.SetReadyForTest ();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tif (merge) {\r\n\t\t\t\tvar jsonData = importerApp.viewer.GetJsonData ();\r\n\t\t\t\timporterApp.viewer.SetJsonData (JSM.MergeJsonDataMeshes (jsonData));\r\n\t\t\t}\r\n\t\t\timporterApp.viewer.ShowAllMeshes (environment);\r\n\t\t}\r\n\r\n\t\tvar jsonData = this.viewer.GetJsonData ();\r\n\t\tif (jsonData.materials.length === 0 || jsonData.meshes.length === 0) {\r\n\t\t\tthis.GenerateError ('Failed to open file. Maybe something is wrong with your file.');\r\n\t\t\tthis.SetReadyForTest ();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar myThis = this;\r\n\t\tif (jsonData.meshes.length > 250) {\r\n\t\t\tthis.floatingDialog.Open ({\r\n\t\t\t\ttitle : 'Information',\r\n\t\t\t\ttext : '<div class=\"importerdialog\">The model contains a large number of meshes. It can cause performance problems. Would you like to merge meshes?</div>',\r\n\t\t\t\tbuttons : [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext : 'yes',\r\n\t\t\t\t\t\tcallback : function (dialog) {\r\n\t\t\t\t\t\t\tShowMeshes (myThis, progressBar, true);\r\n\t\t\t\t\t\t\tdialog.Close ();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext : 'no',\r\n\t\t\t\t\t\tcallback : function (dialog) {\r\n\t\t\t\t\t\t\tShowMeshes (myThis, progressBar, false);\r\n\t\t\t\t\t\t\tdialog.Close ();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t]\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tShowMeshes (myThis, progressBar, false);\r\n\t\t}\r\n\t};\r\n\r\n\tImporterApp.prototype.FitInWindow = function ()\r\n\t{\r\n\t\tthis.viewer.FitInWindow ();\r\n\t};\r\n\r\n\tImporterApp.prototype.FitMeshInWindow = function (meshIndex)\r\n\t{\r\n\t\tthis.viewer.FitMeshInWindow (meshIndex);\r\n\t};\r\n\r\n\tImporterApp.prototype.FitMeshesByMaterialInWindow = function (materialIndex)\r\n\t{\r\n\t\tvar meshIndices = this.viewer.GetMeshesByMaterial (materialIndex);\r\n\t\tif (meshIndices.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.viewer.FitMeshesInWindow (meshIndices);\r\n\t};\r\n\r\n\tImporterApp.prototype.SetFixUp = function ()\r\n\t{\r\n\t\tthis.viewer.SetFixUp ();\r\n\t};\r\n\r\n\tImporterApp.prototype.SetNamedView = function (viewName)\r\n\t{\r\n\t\tthis.viewer.SetNamedView (viewName);\r\n\t};\r\n\r\n\tImporterApp.prototype.SetView = function (viewType)\r\n\t{\r\n\t\tthis.viewer.SetView (viewType);\r\n\t};\r\n\r\n\tImporterApp.prototype.ShowHideMesh = function (meshIndex)\r\n\t{\r\n\t\tvar meshMenuItem = this.meshMenuItems[meshIndex];\r\n\t\tthis.ShowHideMeshInternal (meshIndex, !meshMenuItem.isVisible);\r\n\t\tthis.viewer.Draw ();\r\n\t};\r\n\r\n\tImporterApp.prototype.IsolateMesh = function (meshIndex)\r\n\t{\r\n\t\tvar i, meshMenuItem;\r\n\t\t\r\n\t\tvar onlyThisVisible = true;\r\n\t\tif (!this.meshMenuItems[meshIndex].isVisible) {\r\n\t\t\tonlyThisVisible = false;\r\n\t\t} else {\r\n\t\t\tfor (i = 0; i < this.meshMenuItems.length; i++) {\r\n\t\t\t\tmeshMenuItem = this.meshMenuItems[i];\r\n\t\t\t\tif (meshMenuItem.isVisible && i !== meshIndex) {\r\n\t\t\t\t\tonlyThisVisible = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar i;\r\n\t\tfor (i = 0; i < this.meshMenuItems.length; i++) {\r\n\t\t\tif (onlyThisVisible) {\r\n\t\t\t\tthis.ShowHideMeshInternal (i, true);\r\n\t\t\t} else {\r\n\t\t\t\tif (i == meshIndex) {\r\n\t\t\t\t\tthis.ShowHideMeshInternal (i, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.ShowHideMeshInternal (i, false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.viewer.Draw ();\r\n\t};\r\n\r\n\tImporterApp.prototype.ShowHideMeshInternal = function (meshIndex, isVisible)\r\n\t{\r\n\t\tvar meshMenuItem = this.meshMenuItems[meshIndex];\r\n\t\tmeshMenuItem.isVisible = isVisible;\r\n\t\tmeshMenuItem.visibleImage.attr ('src', meshMenuItem.isVisible ? 'images/visible.png' : 'images/hidden.png');\r\n\t\tthis.viewer.ShowMesh (meshIndex, meshMenuItem.isVisible);\r\n\t};\r\n\r\n\tImporterApp.prototype.HighlightMeshInternal = function (meshIndex, highlight)\r\n\t{\r\n\t\tvar meshMenuItem = this.meshMenuItems[meshIndex];\r\n\t\tmeshMenuItem.Highlight (highlight);\r\n\t\tthis.viewer.HighlightMesh (meshIndex, highlight);\r\n\t};\r\n\r\n\tImporterApp.prototype.ProcessFiles = function (fileList, isUrl)\r\n\t{\r\n\t\tthis.ClearReadyForTest ();\r\n\t\tthis.HideIntroControl ();\r\n\t\tthis.floatingDialog.Close ();\r\n\t\tif (this.inGenerate) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar userFiles = fileList;\r\n\t\tif (userFiles.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.fileNames = null;\r\n\t\t\r\n\t\tvar myThis = this;\r\n\t\tvar processorFunc = JSM.ConvertFileListToJsonData;\r\n\t\tif (isUrl) {\r\n\t\t\tprocessorFunc = JSM.ConvertURLListToJsonData;\r\n\t\t}\r\n\r\n\t\tvar menu = $('#menu');\r\n\t\tmenu.empty ();\r\n\t\tif (isUrl) {\r\n\t\t\tmenu.html ('Downloading files...');\r\n\t\t} else {\r\n\t\t\tmenu.html ('Loading files...');\r\n\t\t}\r\n\t\t\r\n\t\tprocessorFunc (userFiles, {\r\n\t\t\tonError : function () {\r\n\t\t\t\tmyThis.GenerateError ('No readable file found. You can open 3ds, obj, stl, and off files.');\r\n\t\t\t\tmyThis.SetReadyForTest ();\r\n\t\t\t\treturn;\r\n\t\t\t},\r\n\t\t\tonReady : function (fileNames, jsonData) {\r\n\t\t\t\tmyThis.fileNames = fileNames;\r\n\t\t\t\tmyThis.viewer.SetJsonData (jsonData);\r\n\t\t\t\tmenu.empty ();\r\n\t\t\t\tvar progressBar = new ImporterProgressBar (menu);\r\n\t\t\t\tmyThis.JsonLoaded (progressBar);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tImporterApp.prototype.RegisterCanvasClick = function ()\r\n\t{\r\n\t\tvar myThis = this;\r\n\t\tvar mousePosition = null;\r\n\t\tthis.canvas.mousedown (function () {\r\n\t\t\tmousePosition = [event.pageX, event.pageY];\r\n\t\t});\r\n\t\tthis.canvas.mouseup (function (event) {\r\n\t\t\tvar mouseMoved = (mousePosition == null || event.pageX != mousePosition[0] || event.pageY != mousePosition[1]);\r\n\t\t\tif (!mouseMoved) {\r\n\t\t\t\tvar x = event.pageX - $(this).offset ().left;\r\n\t\t\t\tvar y = event.pageY - $(this).offset ().top;\r\n\t\t\t\tmyThis.OnCanvasClick (x, y);\r\n\t\t\t}\r\n\t\t\tmousePosition = null;\r\n\t\t});\r\n\t};\r\n\r\n\tImporterApp.prototype.ScrollMeshIntoView = function (meshIndex)\r\n\t{\r\n\t\tif (meshIndex == -1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar menuItem = this.meshMenuItems[meshIndex];\r\n\t\tmenuItem.menuItemDiv.get (0).scrollIntoView ();\r\n\t};\r\n\r\n\tImporterApp.prototype.HighlightMesh = function (meshIndex)\r\n\t{\r\n\t\tvar i, menuItem, highlight;\r\n\t\tif (meshIndex != -1) {\r\n\t\t\tfor (i = 0; i < this.meshMenuItems.length; i++) {\r\n\t\t\t\tmenuItem = this.meshMenuItems[i];\r\n\t\t\t\thighlight = false;\r\n\t\t\t\tif (i == meshIndex) {\r\n\t\t\t\t\tif (!menuItem.IsHighlighted ()) {\r\n\t\t\t\t\t\tthis.HighlightMeshInternal (i, true);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.HighlightMeshInternal (i, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (i = 0; i < this.meshMenuItems.length; i++) {\r\n\t\t\t\tmenuItem = this.meshMenuItems[i];\r\n\t\t\t\tif (menuItem.IsHighlighted ()) {\r\n\t\t\t\t\tthis.HighlightMeshInternal (i, false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.viewer.Draw ();\r\n\t};\r\n\r\n\tImporterApp.prototype.HighlightMeshesByMaterial = function (materialIndex)\r\n\t{\r\n\t\tvar meshIndices = this.viewer.GetMeshesByMaterial (materialIndex);\r\n\t\tif (meshIndices.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar i, meshIndex, meshMenuItem;\r\n\t\tthis.HighlightMesh (-1);\r\n\t\tfor (i = 0; i < meshIndices.length; i++) {\r\n\t\t\tmeshIndex = meshIndices[i];\r\n\t\t\tmeshMenuItem = this.meshMenuItems[meshIndex];\r\n\t\t\tthis.HighlightMeshInternal (meshIndex, true);\r\n\t\t}\r\n\r\n\t\tthis.meshesGroup.SetOpen (true);\r\n\t\tthis.ScrollMeshIntoView (meshIndices[0]);\r\n\t\tthis.viewer.Draw ();\r\n\t};\r\n\r\n\tImporterApp.prototype.OnCanvasClick = function (x, y)\r\n\t{\r\n\t\tif (this.meshMenuItems == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar objects = this.viewer.GetMeshesUnderPosition (x, y);\r\n\t\tvar meshIndex = -1;\r\n\t\tif (objects.length > 0) {\r\n\t\t\tmeshIndex = objects[0].originalJsonMeshIndex;\r\n\t\t\tthis.meshesGroup.SetOpen (true);\r\n\t\t}\r\n\t\t\r\n\t\tthis.HighlightMesh (meshIndex);\r\n\t\tthis.ScrollMeshIntoView (meshIndex);\r\n\t};\r\n\r\n\tImporterApp.prototype.DragOver = function (event)\r\n\t{\r\n\t\tevent.stopPropagation ();\r\n\t\tevent.preventDefault ();\r\n\t\tevent.dataTransfer.dropEffect = 'copy';\r\n\t};\r\n\r\n\tImporterApp.prototype.Drop = function (event)\r\n\t{\r\n\t\tevent.stopPropagation ();\r\n\t\tevent.preventDefault ();\r\n\t\tthis.ResetHash ();\r\n\t\tthis.ProcessFiles (event.dataTransfer.files, false);\r\n\t};\r\n\r\n\tImporterApp.prototype.FileSelected = function (event)\r\n\t{\r\n\t\tevent.stopPropagation ();\r\n\t\tevent.preventDefault ();\r\n\t\tthis.ResetHash ();\r\n\t\tthis.ProcessFiles (event.target.files, false);\r\n\t};\r\n\r\n\tImporterApp.prototype.OpenFile = function ()\r\n\t{\r\n\t\tvar fileInput = document.getElementById ('file');\r\n\t\tfileInput.click ();\r\n\t};\r\n\r\n\tImporterApp.prototype.ResetHash = function ()\r\n\t{\r\n\t\tif (window.location.hash.length > 1) {\r\n\t\t\twindow.location.hash = '';\r\n\t\t}\r\n\t};\r\n\r\n\tImporterApp.prototype.LoadFilesFromHash = function ()\r\n\t{\r\n\t\tif (window.location.hash.length < 2) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tvar fileInput = $('#file');\r\n\t\tvar hash = window.location.hash;\r\n\t\tif (hash == '#testmode') {\r\n\t\t\tfileInput.css ('display', '');\r\n\t\t\tfileInput.css ('position', 'absolute');\r\n\t\t\tfileInput.css ('right', '10px');\r\n\t\t\tfileInput.css ('bottom', '10px');\r\n\t\t\treturn false;\t\r\n\t\t}\r\n\t\t\r\n\t\tfileInput.css ('display', 'none');\r\n\t\tvar hash = hash.substr (1, hash.length - 1);\r\n\t\tvar fileList = hash.split (',');\r\n\t\tthis.ProcessFiles (fileList, true);\r\n\t\treturn true;\r\n\t};\r\n\r\n\treturn ImporterApp;\r\n});\ndefine('skylark-online3dviewer/main',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"./ImporterApp\"\r\n],function(skylark,ImporterApp) {\r\n\treturn skylark.attach(\"intg.jsmodeler.Online3dViewer\",ImporterApp);\r\n});\ndefine('skylark-online3dviewer', ['skylark-online3dviewer/main'], function (main) { return main; });\n\n"]}